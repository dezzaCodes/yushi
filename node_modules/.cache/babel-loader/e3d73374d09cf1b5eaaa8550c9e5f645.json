{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/GamePage/gamePage.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, Tabs, Tab, CardDeck } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TextField, Button, Input, FormControl, InputLabel, Snackbar, Container } from '@material-ui/core';\nimport { fetchPortfolios } from '../../actions/gamePortfolio';\nimport { addGameHolding, sellGameHolding, resetGame } from '../../actions/gamePortfolio';\nimport axios from 'axios';\nimport { getConfig } from '../../actions/auth';\nimport PopUp from './PopUp';\nimport Alert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles(theme => ({\n  tableHeader: {\n    backgroundColor: '#428bd5'\n  },\n  tableHeaderRows: {\n    color: '#edf4fb'\n  },\n  actions: {\n    display: 'flex'\n  },\n  button: {\n    marginLeft: '5px',\n    marginRight: '5px'\n  },\n  warning: {\n    color: '#ff0000',\n    fontWeight: 'bold'\n  }\n}));\nexport const currencyFormatter = new Intl.NumberFormat('en-AU', {\n  style: 'currency',\n  currency: 'AUD'\n});\n\nfunction GamePage({\n  id,\n  name,\n  gameHoldings,\n  dispatch,\n  confirmation,\n  confirmationError\n}) {\n  const classes = useStyles();\n  const [stockCode, setStockCode] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [leader, setLeader] = React.useState('');\n  const [LB, setLB] = React.useState('');\n  const [lname, setName] = React.useState('');\n  const [rank, setRank] = React.useState('');\n  const [date, setDate] = React.useState('2020-01-01');\n  const [cash, setCash] = React.useState('');\n  const [value, setValue] = React.useState(0);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(true);\n  const userId = localStorage.getItem('id');\n  React.useEffect(() => {\n    dispatch(fetchPortfolios());\n  }, [dispatch]); // get the cash of user from backend\n\n  axios.get(`/api/users/${userId}/cash`, getConfig()).then(res => {\n    setCash(res.data.cash);\n  }).catch(err => {\n    console.log(err);\n  }); //get value from backend\n\n  axios.get(`/game/${userId}/value`, getConfig()).then(res => {\n    setValue(res.data.value);\n  }).catch(err => {\n    console.log(err);\n  });\n  axios.get(`/game/leader`, getConfig()).then(res => {\n    setLeader(res.data.value);\n    setName(res.data.winner);\n  }).catch(err => {\n    console.log(err);\n  });\n  axios.get(`/game/${userId}/rank`, getConfig()).then(res => {\n    setRank(res.data.rank);\n  }).catch(err => {\n    console.log(err);\n  });\n  const totalValue = parseFloat(cash) + parseFloat(value);\n\n  const handleAddHolding = () => {\n    dispatch(addGameHolding({\n      id,\n      name,\n      gameHoldings\n    }, stockCode, quantity));\n    setStockCode('');\n    setQuantity('');\n  };\n\n  const hanldleGameRest = () => {\n    axios.post(`/game/${userId}/reset`, getConfig()).then(res => {\n      setValue(0);\n      setCash(50000);\n    }).catch(err => {\n      console.log(err);\n    }); //    dispatch(resetGame());\n\n    dispatch({\n      type: 'GAME_RESET'\n    });\n  };\n\n  const handleEditHolding = (e, p) => {\n    dispatch(sellGameHolding(p, e));\n  };\n\n  const handleSnackBarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  React.useEffect(() => {\n    setSnackbarOpen(true);\n  }, [confirmation, confirmationError]);\n  return React.createElement(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"title\",\n    style: {\n      marginLeft: '0px',\n      marginTop: '30px',\n      fontSize: '40px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"AUD \", currencyFormatter.format(totalValue)), React.createElement(\"h7\", {\n    className: \"subtitle\",\n    style: {\n      marginLeft: '10px',\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Total Worth\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"title\",\n    style: {\n      marginLeft: '-50px',\n      marginTop: '30px',\n      fontSize: '40px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"AUD \", currencyFormatter.format(cash)), React.createElement(\"h7\", {\n    className: \"subtitle\",\n    style: {\n      marginLeft: '10px',\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Cash\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"title\",\n    style: {\n      marginLeft: '-50px',\n      marginTop: '30px',\n      fontSize: '40px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"AUD \", currencyFormatter.format(value)), React.createElement(\"h7\", {\n    className: \"subtitle\",\n    style: {\n      marginLeft: '10px',\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Portfolio Value\"))), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"h7\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \" Add Stock to Portfolio \"), React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"stock-code\",\n    label: \"Stock code\",\n    value: stockCode,\n    onChange: e => setStockCode(e.target.value.toUpperCase()),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Quantity *\"), React.createElement(Input, {\n    id: \"quantity\",\n    type: \"number\",\n    required: true,\n    value: quantity,\n    onChange: e => setQuantity(Math.round(e.target.value)),\n    inputProps: {\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    onClick: handleAddHolding,\n    style: {\n      left: '170px',\n      top: '-35px',\n      postion: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Add Holding\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    className: classes.warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"$10 BROKERAGE FEE ON PURCHASE OR SALE\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      left: '360px',\n      top: '-35px',\n      postion: 'absolute'\n    },\n    onClick: hanldleGameRest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"RESET GAME\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"title\",\n    style: {\n      marginLeft: \"100px\",\n      marginTop: \"30px\",\n      fontSize: \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \" AUD \", currencyFormatter.format(leader), \" \"), React.createElement(\"h7\", {\n    className: \"subtitle\",\n    style: {\n      marginLeft: \"130px\",\n      fontSize: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Current Leader \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, lname), \"'s Total Worth\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"h7\", {\n    className: \"subtitle\",\n    style: {\n      marginLeft: \"10px\",\n      fontSize: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Your current position: \", rank)))), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Code\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Buy Price\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Current Price\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    id: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, gameHoldings.map(h => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, h.stock_code.toUpperCase()), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, h.quantity), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, h.price), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, h.stock.price), React.createElement(TableCell, {\n    className: classes.actions,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(PopUp, {\n    handler: handleEditHolding,\n    p: h.id,\n    string: \"Number to sell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  })))), gameHoldings.length === 0 && React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"No holdings!!\")))), (confirmation || confirmationError) && React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 5000,\n    onClose: handleSnackBarClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    elevation: 6,\n    variant: \"filled\",\n    onClose: handleSnackBarClose,\n    severity: confirmation ? 'success' : 'error',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, confirmation ? confirmation : confirmationError)));\n}\n\nconst mapStateToProps = state => {\n  const {\n    gamePortfolio\n  } = state;\n  const {\n    gameHoldings,\n    isFetching,\n    error,\n    confirmation,\n    confirmationError\n  } = gamePortfolio;\n  return {\n    gameHoldings,\n    isFetching,\n    error,\n    confirmation,\n    confirmationError\n  };\n};\n\nGamePage.propTypes = {\n  gameHoldings: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps)(GamePage);","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/GamePage/gamePage.js"],"names":["React","useState","Link","Redirect","connect","Card","Tabs","Tab","CardDeck","PropTypes","makeStyles","Grid","Table","TableHead","TableRow","TableCell","TableBody","TextField","Button","Input","FormControl","InputLabel","Snackbar","Container","fetchPortfolios","addGameHolding","sellGameHolding","resetGame","axios","getConfig","PopUp","Alert","useStyles","theme","tableHeader","backgroundColor","tableHeaderRows","color","actions","display","button","marginLeft","marginRight","warning","fontWeight","currencyFormatter","Intl","NumberFormat","style","currency","GamePage","id","name","gameHoldings","dispatch","confirmation","confirmationError","classes","stockCode","setStockCode","quantity","setQuantity","leader","setLeader","LB","setLB","lname","setName","rank","setRank","date","setDate","cash","setCash","value","setValue","snackbarOpen","setSnackbarOpen","userId","localStorage","getItem","useEffect","get","then","res","data","catch","err","console","log","winner","totalValue","parseFloat","handleAddHolding","hanldleGameRest","post","type","handleEditHolding","e","p","handleSnackBarClose","marginTop","fontSize","format","position","target","toUpperCase","Math","round","min","left","top","postion","map","h","stock_code","price","stock","length","mapStateToProps","state","gamePortfolio","isFetching","error","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, Tabs, Tab, CardDeck } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TextField,\n  Button,\n  Input,\n  FormControl,\n  InputLabel,\n  Snackbar,\n  Container,\n} from '@material-ui/core';\nimport { fetchPortfolios } from '../../actions/gamePortfolio';\n\nimport {\n  addGameHolding,\n  sellGameHolding,\n  resetGame,\n} from '../../actions/gamePortfolio';\nimport axios from 'axios';\nimport { getConfig } from '../../actions/auth';\nimport PopUp from './PopUp';\n\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    backgroundColor: '#428bd5',\n  },\n  tableHeaderRows: {\n    color: '#edf4fb',\n  },\n  actions: {\n    display: 'flex',\n  },\n  button: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  },\n  warning: {\n  \tcolor: '#ff0000',\n  \tfontWeight: 'bold',\n  }\n}));\n\nexport const currencyFormatter = new Intl.NumberFormat('en-AU', {\n  style: 'currency',\n  currency: 'AUD',\n});\n\nfunction GamePage({\n  id,\n  name,\n  gameHoldings,\n  dispatch,\n  confirmation,\n  confirmationError,\n}) {\n  const classes = useStyles();\n  const [stockCode, setStockCode] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [leader, setLeader] = React.useState('');\n  const [LB, setLB] = React.useState('');\n  const [lname, setName] = React.useState('');\n  const [rank, setRank] = React.useState('');\n  const [date, setDate] = React.useState('2020-01-01');\n  const [cash, setCash] = React.useState('');\n  const [value, setValue] = React.useState(0);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(true);\n  const userId = localStorage.getItem('id');\n\n  React.useEffect(() => {\n    dispatch(fetchPortfolios());\n  }, [dispatch]);\n\n\n\n// get the cash of user from backend\naxios\n    .get(`/api/users/${userId}/cash`, getConfig())\n    .then((res) => {\n      setCash(res.data.cash);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n  //get value from backend\n  axios\n    .get(`/game/${userId}/value`, getConfig())\n    .then((res) => {\n      setValue(res.data.value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n  axios\n    .get(`/game/leader`, getConfig())\n    .then((res) => {\n      setLeader(res.data.value);\n      setName(res.data.winner);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n     axios\n    .get(`/game/${userId}/rank`, getConfig())\n    .then((res) => {\n      setRank(res.data.rank);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n\n  const totalValue = parseFloat(cash) + parseFloat(value);\n\n  const handleAddHolding = () => {\n    dispatch(addGameHolding({ id, name, gameHoldings }, stockCode, quantity));\n\n    setStockCode('');\n    setQuantity('');\n  };\n\n  const hanldleGameRest = () => {\n    axios\n      .post(`/game/${userId}/reset`, getConfig())\n      .then((res) => {\n        setValue(0);\n        setCash(50000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //    dispatch(resetGame());\n    dispatch({ type: 'GAME_RESET' });\n  };\n\n  const handleEditHolding = (e, p) => {\n    dispatch(sellGameHolding(p, e));\n  };\n\n  const handleSnackBarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  React.useEffect(() => {\n    setSnackbarOpen(true);\n  }, [confirmation, confirmationError]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={4}>\n          <h6\n            className=\"title\"\n            style={{ marginLeft: '0px', marginTop: '30px', fontSize: '40px' }}\n          >\n            AUD {currencyFormatter.format(totalValue)}\n          </h6>\n          <h7\n            className=\"subtitle\"\n            style={{ marginLeft: '10px', fontSize: '20px' }}\n          >\n            Total Worth\n          </h7>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <h6\n            className=\"title\"\n            style={{ marginLeft: '-50px', marginTop: '30px', fontSize: '40px' }}\n          >\n            AUD {currencyFormatter.format(cash)}\n          </h6>\n          <h7\n            className=\"subtitle\"\n            style={{ marginLeft: '10px', fontSize: '20px' }}\n          >\n            Cash\n          </h7>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <h6\n            className=\"title\"\n            style={{ marginLeft: '-50px', marginTop: '30px', fontSize: '40px' }}\n          >\n            AUD {currencyFormatter.format(value)}\n          </h6>\n          <h7\n            className=\"subtitle\"\n            style={{ marginLeft: '10px', fontSize: '20px' }}\n          >\n            Portfolio Value\n          </h7>\n        </Grid>\n\n\n      </Grid>\n\n\t<Table>\n\t<TableRow>\n\t\t<TableCell>\n\t\t<h7> Add Stock to Portfolio </h7>\n\t\t<form noValidate autoComplete=\"off\" style={{ position: 'relative' }}>\n        <TextField\n          id=\"stock-code\"\n          label=\"Stock code\"\n          value={stockCode}\n          onChange={(e) => setStockCode(e.target.value.toUpperCase())}\n          required={true}\n        />\n        <FormControl>\n          <InputLabel htmlFor=\"quantity\">Quantity *</InputLabel>\n          <Input\n            id=\"quantity\"\n            type=\"number\"\n            required={true}\n            value={quantity}\n            onChange={(e) => setQuantity(Math.round(e.target.value))}\n            inputProps={{ min: 1 }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n            onClick={handleAddHolding}\n            style={{ left: '170px', top: '-35px', postion: 'absolute' }}\n          >\n            Add Holding\n          </Button>\n        </FormControl>\n      </form>\n      <br></br>\n      <h6 className={classes.warning}>$10 BROKERAGE FEE ON PURCHASE OR SALE</h6>\n      <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ left: '360px', top: '-35px', postion: 'absolute' }}\n            onClick={hanldleGameRest}\n          >\n            RESET GAME\n          </Button>\n      </TableCell>\n\t\t<TableCell>\n\n          <h6 className=\"title\" style = {{marginLeft:\"100px\",marginTop:\"30px\",fontSize:\"40px\"}}> AUD {currencyFormatter.format(leader)} </h6>\n          <h7 className=\"subtitle\"style = {{marginLeft:\"130px\",fontSize:\"20px\"}}>Current Leader <b>{lname}</b>'s Total Worth</h7>\n          </TableCell>\n\n         <TableCell>\n         <h7 className=\"subtitle\"style = {{marginLeft:\"10px\",fontSize:\"20px\"}}>Your current position: {rank}</h7>\n         </TableCell>\n    </TableRow>\n\t</Table>\n\n\n      <Table>\n        <TableHead className={classes.tableHeader}>\n          <TableRow>\n            <TableCell className={classes.tableHeaderRows}>Code</TableCell>\n            <TableCell className={classes.tableHeaderRows}>Quantity</TableCell>\n            <TableCell className={classes.tableHeaderRows}>Buy Price</TableCell>\n            <TableCell className={classes.tableHeaderRows}>\n              Current Price\n            </TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody id=\"1\">\n          {gameHoldings.map((h) => (\n            <TableRow>\n              <TableCell>{h.stock_code.toUpperCase()}</TableCell>\n              <TableCell>{h.quantity}</TableCell>\n              <TableCell>{h.price}</TableCell>\n              <TableCell>{h.stock.price}</TableCell>\n              <TableCell className={classes.actions} align=\"right\">\n                <PopUp\n                  handler={handleEditHolding}\n                  p={h.id}\n                  string=\"Number to sell\"\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n          {gameHoldings.length === 0 && (\n            <TableRow>\n              <TableCell>No holdings!!</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {(confirmation || confirmationError) && (\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={5000}\n          onClose={handleSnackBarClose}\n        >\n          <Alert\n            elevation={6}\n            variant=\"filled\"\n            onClose={handleSnackBarClose}\n            severity={confirmation ? 'success' : 'error'}\n          >\n            {confirmation ? confirmation : confirmationError}\n          </Alert>\n        </Snackbar>\n      )}\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { gamePortfolio } = state;\n  const {\n    gameHoldings,\n    isFetching,\n    error,\n    confirmation,\n    confirmationError,\n  } = gamePortfolio;\n  return { gameHoldings, isFetching, error, confirmation, confirmationError };\n};\n\nGamePage.propTypes = {\n  gameHoldings: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps)(GamePage);\n"]},"metadata":{},"sourceType":"module"}