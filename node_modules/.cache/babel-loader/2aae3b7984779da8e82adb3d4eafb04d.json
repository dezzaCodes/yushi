{"ast":null,"code":"/**\n *  set up the store of companies \n */\nimport { COMPANIES_LOADING, COMPANIES_SUCCESS, COMPANIES_FAILURE } from '../actions/types';\nconst initialState = {\n  isFetching: false,\n  data: [],\n  error: null\n};\nexport default function companies(state = initialState, action) {\n  switch (action.type) {\n    case COMPANIES_LOADING:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case COMPANIES_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: action.payload,\n        error: null,\n        receivedAt: Date.now()\n      });\n\n    case COMPANIES_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: [],\n        error: action.payload,\n        receivedAt: Date.now()\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/reducers/companies.js"],"names":["COMPANIES_LOADING","COMPANIES_SUCCESS","COMPANIES_FAILURE","initialState","isFetching","data","error","companies","state","action","type","Object","assign","payload","receivedAt","Date","now"],"mappings":"AAAA;;;AAGA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAGL,YAA3B,EAAyCM,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,iBAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKH,iBAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,IAAI,EAAEI,MAAM,CAACI,OAFiB;AAG9BP,QAAAA,KAAK,EAAE,IAHuB;AAI9BQ,QAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAJkB,OAAzB,CAAP;;AAMF,SAAKd,iBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,IAAI,EAAE,EAFwB;AAG9BC,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAHgB;AAI9BC,QAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAJkB,OAAzB,CAAP;;AAMF;AACE,aAAOR,KAAP;AApBJ;AAsBD","sourcesContent":["/**\n *  set up the store of companies \n */\nimport {\n  COMPANIES_LOADING,\n  COMPANIES_SUCCESS,\n  COMPANIES_FAILURE\n} from '../actions/types';\n\nconst initialState = {\n  isFetching: false,\n  data: [],\n  error: null\n};\n\nexport default function companies(state = initialState, action) {\n  switch (action.type) {\n    case COMPANIES_LOADING:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n    case COMPANIES_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: action.payload,\n        error: null,\n        receivedAt: Date.now()\n      });\n    case COMPANIES_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: [],\n        error: action.payload,\n        receivedAt: Date.now()\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}