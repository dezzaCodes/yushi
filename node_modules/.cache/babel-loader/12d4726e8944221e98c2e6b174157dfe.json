{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/AnalyticsTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport { TableHead, TableRow, TableCell, TableBody, TableContainer, Paper, TablePagination } from '@material-ui/core';\n\nfunction AnalyticsTable({\n  headings,\n  propertyNames,\n  data,\n  fillWithEmpty\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n  return React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      backgroundColor: '#76abe0',\n      color: '#edf4fb'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, headings.map((h, i) => React.createElement(TableCell, {\n    key: i,\n    style: {\n      color: '#edf4fb',\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, h)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, propertyNames.map((property, j) => React.createElement(TableCell, {\n    key: j,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, row[property] ? row[property] : \"N/A\")))))), data.length > 5 && React.createElement(TablePagination, {\n    component: \"div\",\n    rowsPerPageOptions: [5, 10, 25],\n    count: data.length,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nAnalyticsTable.propTypes = {\n  headings: PropTypes.array.isRequired,\n  propertyNames: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default AnalyticsTable;","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/AnalyticsTable.js"],"names":["React","PropTypes","Table","TableHead","TableRow","TableCell","TableBody","TableContainer","Paper","TablePagination","AnalyticsTable","headings","propertyNames","data","fillWithEmpty","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","backgroundColor","color","map","h","i","fontWeight","slice","row","property","j","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,cALF,EAMEC,KANF,EAOEC,eAPF,QAQO,mBARP;;AAUA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,aAAZ;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA;AAAjC,CAAxB,EAA0E;AACxE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAAtC;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQN,IAAR,KAAiB;AACxCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,uBAAuB,GAAGD,KAAK,IAAI;AACvCF,IAAAA,cAAc,CAACI,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMU,SAAS,GACbR,WAAW,GAAGS,IAAI,CAACC,GAAL,CAASV,WAAT,EAAsBL,IAAI,CAACgB,MAAL,GAAcd,IAAI,GAAGG,WAA3C,CADhB;AAGA,SACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEV,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEsB,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,QAAQ,CAACqB,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KACZ,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,KAAK,EAAE;AACLH,MAAAA,KAAK,EAAE,SADF;AAELI,MAAAA,UAAU,EAAE;AAFP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,CAPH,CADD,CADH,CADF,CADF,EAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,IAAI,CACFuB,KADF,CACQrB,IAAI,GAAGG,WADf,EAC4BH,IAAI,GAAGG,WAAP,GAAqBA,WADjD,EAEEc,GAFF,CAEM,CAACK,GAAD,EAAMH,CAAN,KACH,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,aAAa,CAACoB,GAAd,CAAkB,CAACM,QAAD,EAAWC,CAAX,KACjB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBF,GAAG,CAACC,QAAD,CAAH,GAAgBD,GAAG,CAACC,QAAD,CAAnB,GAA8B,KAAlD,CADD,CADH,CAHH,CADH,CAhBF,CADF,EA6BGzB,IAAI,CAACgB,MAAL,GAAc,CAAd,IACC,oBAAC,eAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAFtB;AAGE,IAAA,KAAK,EAAEhB,IAAI,CAACgB,MAHd;AAIE,IAAA,IAAI,EAAEd,IAJR;AAKE,IAAA,WAAW,EAAEG,WALf;AAME,IAAA,YAAY,EAAEE,gBANhB;AAOE,IAAA,mBAAmB,EAAEE,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADF;AA2CD;;AAEDZ,cAAc,CAAC8B,SAAf,GAA2B;AACzB7B,EAAAA,QAAQ,EAAEV,SAAS,CAACwC,KAAV,CAAgBC,UADD;AAEzB9B,EAAAA,aAAa,EAAEX,SAAS,CAACwC,KAAV,CAAgBC,UAFN;AAGzB7B,EAAAA,IAAI,EAAEZ,SAAS,CAACwC,KAAV,CAAgBC;AAHG,CAA3B;AAMA,eAAehC,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport {\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableContainer,\n  Paper,\n  TablePagination\n} from '@material-ui/core';\n\nfunction AnalyticsTable({ headings, propertyNames, data, fillWithEmpty }) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow style={{ backgroundColor: '#76abe0', color: '#edf4fb' }}>\n            {headings.map((h, i) => (\n              <TableCell\n                key={i}\n                style={{\n                  color: '#edf4fb',\n                  fontWeight: '600'\n                }}\n              >\n                {h}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, i) => (\n              <TableRow key={i}>\n                {propertyNames.map((property, j) => (\n                  <TableCell key={j}>{row[property] ? row[property]:\"N/A\"}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      {data.length > 5 && (\n        <TablePagination\n          component=\"div\"\n          rowsPerPageOptions={[5, 10, 25]}\n          count={data.length}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      )}\n    </TableContainer>\n  );\n}\n\nAnalyticsTable.propTypes = {\n  headings: PropTypes.array.isRequired,\n  propertyNames: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nexport default AnalyticsTable;\n"]},"metadata":{},"sourceType":"module"}