{"ast":null,"code":"/**\n *  set up the store of accounts \n */\nimport { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_SUCCESS, REG_SUCCESS, REG_FAILURE, GUEST_USER } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  email: null,\n  id: localStorage.getItem('id')\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        email: action.payload.email,\n        id: action.payload.id,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('id', action.payload.id);\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: true,\n        isLoading: false,\n        email: action.payload.email,\n        id: localStorage.getItem('id')\n      };\n\n    case REG_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('id', action.payload.id);\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: true,\n        isLoading: false,\n        email: action.payload.email,\n        id: localStorage.getItem('id')\n      };\n\n    case LOGOUT_SUCCESS:\n      localStorage.clear();\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: false,\n        isLoading: false,\n        email: null,\n        id: null\n      };\n\n    case LOGIN_FAILURE:\n    case REG_FAILURE:\n    case AUTH_ERROR:\n      localStorage.clear();\n\n    case GUEST_USER:\n      return { ...state,\n        email: null,\n        id: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/reducers/auth.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_SUCCESS","REG_SUCCESS","REG_FAILURE","GUEST_USER","initialState","token","localStorage","getItem","isAuthenticated","isLoading","email","id","state","action","type","payload","setItem","clear"],"mappings":"AAAA;;;AAIA,SACEA,YADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,WAPF,EAQEC,WARF,EASEC,UATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE,IAJY;AAKnBC,EAAAA,EAAE,EAAEL,YAAY,CAACC,OAAb,CAAqB,IAArB;AALe,CAArB;AAQA,eAAe,UAAUK,KAAK,GAAGR,YAAlB,EAAgCS,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,YAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELH,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAFjB;AAGLC,QAAAA,EAAE,EAAEE,MAAM,CAACE,OAAP,CAAeJ,EAHd;AAILH,QAAAA,eAAe,EAAE,IAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKV,aAAL;AACEO,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACE,OAAP,CAAeV,KAA7C;AACAC,MAAAA,YAAY,CAACU,OAAb,CAAqB,IAArB,EAA2BH,MAAM,CAACE,OAAP,CAAeJ,EAA1C;AACA,aAAO;AACLN,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;AAELC,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAJjB;AAKLC,QAAAA,EAAE,EAAEL,YAAY,CAACC,OAAb,CAAqB,IAArB;AALC,OAAP;;AAOF,SAAKN,WAAL;AACEK,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACE,OAAP,CAAeV,KAA7C;AACAC,MAAAA,YAAY,CAACU,OAAb,CAAqB,IAArB,EAA2BH,MAAM,CAACE,OAAP,CAAeJ,EAA1C;AACA,aAAO;AACLN,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;AAELC,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAJjB;AAKLC,QAAAA,EAAE,EAAEL,YAAY,CAACC,OAAb,CAAqB,IAArB;AALC,OAAP;;AAOF,SAAKP,cAAL;AACEM,MAAAA,YAAY,CAACW,KAAb;AACA,aAAO;AACLZ,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;AAELC,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,EAAE,EAAE;AALC,OAAP;;AAOF,SAAKb,aAAL;AACA,SAAKI,WAAL;AACA,SAAKL,UAAL;AACES,MAAAA,YAAY,CAACW,KAAb;;AACF,SAAKd,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,EAAE,EAAE,IAHC;AAILH,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF;AACE,aAAOG,KAAP;AAxDJ;AA0DD","sourcesContent":["/**\n *  set up the store of accounts \n */\n\nimport {\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REG_SUCCESS,\n  REG_FAILURE,\n  GUEST_USER,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  email: null,\n  id: localStorage.getItem('id'),\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        email: action.payload.email,\n        id: action.payload.id,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('id', action.payload.id);\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: true,\n        isLoading: false,\n        email: action.payload.email,\n        id: localStorage.getItem('id'),\n      };\n    case REG_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('id', action.payload.id);\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: true,\n        isLoading: false,\n        email: action.payload.email,\n        id: localStorage.getItem('id'),\n      };\n    case LOGOUT_SUCCESS:\n      localStorage.clear();\n      return {\n        token: localStorage.getItem('token'),\n        isAuthenticated: false,\n        isLoading: false,\n        email: null,\n        id: null,\n      };\n    case LOGIN_FAILURE:\n    case REG_FAILURE:\n    case AUTH_ERROR:\n      localStorage.clear();\n    case GUEST_USER:\n      return {\n        ...state,\n        email: null,\n        id: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}