{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/AnalysisPage/ValueAtRisk.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { FormControl, Select, MenuItem, InputLabel, Input, Button, Grid, Container, CircularProgress, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Snackbar, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ResponsiveContainer, LineChart, Line, Tooltip, XAxis, YAxis, AreaChart, Area, CartesianGrid } from 'recharts';\nimport SimulationDisplay from './SimulationDisplay';\nconst colours = ['#396AB1', '#DA7C30', '#3E9651', '#CC2529', '#535154', '#6B4C9A', '#922428', '#948B3D'];\nconst percentFormatter = Intl.NumberFormat('en-AU', {\n  style: 'percent',\n  maximumFractionDigits: 2\n});\nconst dateFormat = 'DD/MM/YY';\n\nconst monthDayTickFormatter = tick => {\n  return moment(tick, dateFormat).format('DD/MM');\n};\n\nconst YearTickFormatter = tick => {\n  return moment(tick, dateFormat).format('YYYY');\n};\n\nexport function ValueAtRisk({\n  chosenPortfolio,\n  showPortfolioForm\n}) {\n  // For creating a portfolio to calculate VaR & ES with\n  const [stockCode, setStockCode] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [portfolio, setPortfolio] = useState(chosenPortfolio); // Parameters for calculation\n\n  const [method, setMethod] = useState('historical');\n  const [nDays, setNDays] = useState(1);\n  const [percentile, setPercentile] = useState(95);\n  const [period, setPeriod] = useState('2y'); // extra parameters for monte carlo simuation method\n\n  const [timeStep, setTimeStep] = useState(1);\n  const [nSimulations, setNSimulations] = useState(200); // for fetching data from backend\n\n  const [isFetching, setIsFetching] = useState(false);\n  const [VaR, setVaR] = useState(null);\n  const [ES, setES] = useState(null);\n  const [historicalPrices, setHistoricalPrices] = useState(null);\n  const [simulations, setSimulations] = useState(null);\n  const [endingPrices, setEndingPrices] = useState(null); // showing errors\n\n  const [snackBarError, setSnackBarError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [fetchingError, setFetchingError] = useState(null);\n  useEffect(() => {\n    setPortfolio(chosenPortfolio);\n  }, [chosenPortfolio]); // Methods for handling portfolio for simulation\n\n  const handleAddStock = e => {\n    e.preventDefault();\n    if (!stockCode || stockCode.length !== 3) return;\n    const updatedPortfolio = { ...portfolio\n    };\n\n    if (!portfolio[stockCode]) {\n      updatedPortfolio[stockCode] = parseInt(quantity);\n    } else {\n      updatedPortfolio[stockCode] += parseInt(quantity);\n    }\n\n    setPortfolio(updatedPortfolio); // Reset inputs\n\n    setStockCode('');\n    setQuantity(1);\n  };\n\n  const handleResetPortfolio = () => {\n    setPortfolio({});\n  }; // Fetching VaR and ES results using parameters given\n\n\n  const handleVaRSubmit = e => {\n    e.preventDefault();\n\n    if (Object.keys(portfolio).length === 0) {\n      // TODO: show error\n      setSnackBarError('Portfolio has no stocks!');\n      setOpen(true);\n      return;\n    }\n\n    setFetchingError(null);\n    setSnackBarError(null);\n    setIsFetching(true);\n    axios.post('/analytics/VaR-ES-sim', {\n      portfolio,\n      n_days: parseInt(nDays),\n      percentile: parseInt(percentile),\n      period,\n      method: method === 'monte-w' ? 'monte' : method,\n      time_step: parseInt(timeStep),\n      num_simulations: parseInt(nSimulations),\n      use_weighted: method === 'monte-w'\n    }).then(res => fetchVaRSuccess(res.data)).catch(err => fetchVaRError(err));\n  };\n\n  const fetchVaRSuccess = resData => {\n    setIsFetching(false);\n    setFetchingError(null);\n    setSnackBarError(null);\n    const {\n      VaR,\n      expected_shortfall,\n      data,\n      ending_prices\n    } = resData; // console.log(resData);\n\n    setVaR(VaR);\n    setES(expected_shortfall);\n\n    if (data) {\n      // reformat data for display\n      const reformatted = data.map(d => {\n        return { ...d,\n          date: moment(d.date).format(dateFormat)\n        };\n      });\n      setHistoricalPrices(reformatted);\n    } else {\n      setHistoricalPrices(null);\n    }\n\n    if (resData.simulations) {\n      // reformat simulation data for display\n      const sims = [];\n\n      for (let i = 0; i < Object.keys(resData.simulations).length; i++) {\n        const key = Object.keys(resData.simulations)[i];\n        const daysSimulation = resData.simulations[key];\n        sims.push(daysSimulation);\n      }\n\n      setSimulations(sims);\n    } else {\n      setSimulations(null);\n    }\n\n    if (ending_prices) {\n      // group the ending prices into categories\n      const roundToNumber = 2;\n      const prices = {};\n\n      for (let i = 0; i < ending_prices.length; i++) {\n        const ending = ending_prices[i]['Ending_Prices'];\n        const base = ending - ending % roundToNumber;\n        const category = `${base} - ${base + roundToNumber - 1}`;\n\n        if (!prices[category]) {\n          prices[category] = 1;\n        } else {\n          prices[category] += 1;\n        }\n      } // convert prices into a list for display\n\n\n      const categorisedEndingPrices = Object.keys(prices).map(k => {\n        return {\n          range: k,\n          amount: prices[k]\n        };\n      });\n      setEndingPrices(categorisedEndingPrices);\n    } else {\n      setEndingPrices(null);\n    }\n  };\n\n  const fetchVaRError = error => {\n    setIsFetching(false);\n\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      if (error.response.status === 422) {\n        // Snackbar error because it to do with form\n        setSnackBarError(`${error.response.status} Error: ${error.response.data}`);\n        setOpen(true);\n      } else {\n        setFetchingError(`${error.response.status} Error: ${error.response.data}`);\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      setFetchingError('Request was made but no response was received.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      setFetchingError(error.message);\n    }\n  };\n\n  const handleSnackBarClose = () => {\n    setOpen(false);\n    setSnackBarError(null);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: \"analysis-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Value at Risk and\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), \" Expected Shortfall Calculation\"), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"This tool calculates the \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Value at Risk (VaR)\"), \" and\", ' ', React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Expected Shortfall (ES)\"), \" of a portfolio. The VaR statistic refers to the maximum loss expected (or worst case scenario) on a portfolio, over a given time period and given a specified degree of confidence. The ES statistic is an alternative to VaR that is more sensitive to the shape of the tail of the loss distribution; it takes the mean of losses between the VaR level and maximum loss level. There are several methods this tool can use to calculate this risk:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Historical Method\"), \": With this method, it re-organizes actual historical returns and then assumes that history will repeat itself from a risk perspective.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Variance-Covariance Method\"), \": This method assumes that stock returns are normally distributed and bases the risk on its expected return and standard deviation.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Monte Carlo Method\"), \": This involves simulating future stock prices (using Geometric Browian Motion) and calculates the value of risk from these hypothesised trials.\")))), React.createElement(Container, {\n    maxWidth: \"md\",\n    className: \"analysis-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    md: 3,\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"Portfolio to Calculate:\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, Object.keys(portfolio).map(k => React.createElement(Grid, {\n    key: k,\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, k, \": \", portfolio[k]))), Object.keys(portfolio).length === 0 && React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Nothing added yet!\"))), showPortfolioForm && React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"add-stock-to-portfolio-form\",\n    onSubmit: handleAddStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"stock-code-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Stock Code\"), React.createElement(Input, {\n    placeholder: \"ex. ASX\",\n    value: stockCode,\n    onChange: e => setStockCode(e.target.value.toUpperCase()),\n    inputProps: {\n      'aria-label': 'stock-code-input',\n      maxLength: 3,\n      minLength: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(Input, {\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    inputProps: {\n      'aria-label': 'time-step-input',\n      type: 'number',\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    md: 2,\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    id: \"add-stock-btn\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, \"Add Stock\")), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    md: 3,\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleResetPortfolio,\n    id: \"reset-portfolo-btn\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, \"Reset Portfolio\"))))))), React.createElement(Container, {\n    maxWidth: \"md\",\n    className: \"analysis-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"VaR-ES-form\",\n    onSubmit: handleVaRSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Method\"), React.createElement(Select, {\n    value: method,\n    onChange: e => setMethod(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"historical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, \"Using only Historical Data\"), React.createElement(MenuItem, {\n    value: \"covariance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"Variance-Covariance of Historical Data\"), React.createElement(MenuItem, {\n    value: \"monte\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, \"Monte Carlo Simuation (non-weighted, geometric browian motion)\"), React.createElement(MenuItem, {\n    value: \"monte-w\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"Monte Carlo Simuation (weighted, geometric browian motion)\")))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"n-days-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, \"Number of Days to Simulate\"), React.createElement(Input, {\n    value: nDays,\n    onChange: e => setNDays(e.target.value),\n    inputProps: {\n      'aria-label': 'n-days-input',\n      type: 'number',\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"period-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, \"Period of Historical Data Used\"), React.createElement(Select, {\n    labelId: \"period-select-label\",\n    id: \"period-select\",\n    value: period,\n    onChange: e => setPeriod(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"1mo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"1 months\"), React.createElement(MenuItem, {\n    value: \"3mo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, \"3 months\"), React.createElement(MenuItem, {\n    value: \"6mo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"6 months\"), React.createElement(MenuItem, {\n    value: \"1y\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, \"1y\"), React.createElement(MenuItem, {\n    value: \"2y\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"2y\"), React.createElement(MenuItem, {\n    value: \"5y\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, \"5y\"), React.createElement(MenuItem, {\n    value: \"10y\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, \"10y\"), React.createElement(MenuItem, {\n    value: \"max\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, \"All\")))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"percentile-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, \"Confidence Level\"), React.createElement(Input, {\n    value: percentile,\n    onChange: e => setPercentile(e.target.value),\n    inputProps: {\n      'aria-label': 'percentile-input',\n      type: 'number',\n      max: 99,\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }))), (method === 'monte' || method === 'monte-w') && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"n-simulations-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, \"Number of Simulations\"), React.createElement(Input, {\n    value: nSimulations,\n    onChange: e => setNSimulations(e.target.value),\n    inputProps: {\n      'aria-label': 'number-of-simulations-input',\n      type: 'number',\n      max: 2000,\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"time-step-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, \"Time Step of Simulation\"), React.createElement(Input, {\n    value: timeStep,\n    onChange: e => setTimeStep(e.target.value),\n    inputProps: {\n      'aria-label': 'time-step-input',\n      type: 'number',\n      max: nDays,\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, \"Calculate VaR & ES\"))))), isFetching && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }), snackBarError && React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleSnackBarClose,\n    message: snackBarError,\n    action: React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507\n    },\n    __self: this\n  }), fetchingError && React.createElement(Alert, {\n    severity: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528\n    },\n    __self: this\n  }, fetchingError), !fetchingError && !isFetching && (VaR || ES) && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533\n    },\n    __self: this\n  }, \"Results\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534\n    },\n    __self: this\n  }, \"Value at Risk: \", percentFormatter.format(VaR)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }, \"Expected Shortfall: \", percentFormatter.format(ES)), React.createElement(ExpansionPanel, {\n    className: \"analysis-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }),\n    \"aria-controls\": \"var-es-extra-content\",\n    id: \"var-es-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538\n    },\n    __self: this\n  }, simulations && 'View Simulations Generated', historicalPrices && 'View Historical Data Used'), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }, simulations && React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551\n    },\n    __self: this\n  }, \"Simulated Prices\"), React.createElement(SimulationDisplay, {\n    data: simulations,\n    timeStep: timeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552\n    },\n    __self: this\n  })), endingPrices && React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557\n    },\n    __self: this\n  }, \"Distribution of Simulated Ending Prices\"), React.createElement(ResponsiveContainer, {\n    width: \"80%\",\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: endingPrices,\n    margin: {\n      left: 10,\n      bottom: 50,\n      right: 5,\n      top: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    vertical: false,\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"range\",\n    label: {\n      value: 'Range of Simulated Ending Prices',\n      position: 'insideBottom',\n      offset: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    dataKey: \"amount\",\n    label: {\n      value: 'Amount of Simulations',\n      angle: -90,\n      position: 'insideBottomLeft'\n    },\n    name: \"Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581\n    },\n    __self: this\n  }), React.createElement(Area, {\n    dataKey: \"amount\",\n    type: \"monotone\",\n    name: \"Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582\n    },\n    __self: this\n  })))), historicalPrices && React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592\n    },\n    __self: this\n  }, \"Historical Worth of Portfolio\")), React.createElement(ResponsiveContainer, {\n    width: \"90%\",\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: historicalPrices,\n    margin: {\n      left: 5,\n      bottom: 50,\n      right: 5,\n      top: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    tickFormatter: monthDayTickFormatter,\n    minTickGap: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    tickLine: false,\n    axisLine: false,\n    tickFormatter: YearTickFormatter,\n    xAxisId: \"year\",\n    minTickGap: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    vertical: false,\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    domain: ['auto', 'auto'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614\n    },\n    __self: this\n  }), React.createElement(Line, {\n    dataKey: \"Port_Value\",\n    name: \"Portfolio Value\",\n    dot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615\n    },\n    __self: this\n  }), Object.keys(portfolio).map((k, i) => React.createElement(Line, {\n    dataKey: k,\n    key: k,\n    dot: false,\n    stroke: colours[i % colours.length],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }))))))))));\n}\nValueAtRisk.propTypes = {\n  chosenPortfolio: PropTypes.object.isRequired,\n  showPortfolioForm: PropTypes.bool.isRequired\n};\nexport default function ValueAtRiskPage() {\n  return React.createElement(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  }, React.createElement(ValueAtRisk, {\n    chosenPortfolio: {},\n    showPortfolioForm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/AnalysisPage/ValueAtRisk.js"],"names":["React","useState","useEffect","PropTypes","axios","moment","FormControl","Select","MenuItem","InputLabel","Input","Button","Grid","Container","CircularProgress","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Snackbar","IconButton","Alert","ExpandMoreIcon","CloseIcon","ResponsiveContainer","LineChart","Line","Tooltip","XAxis","YAxis","AreaChart","Area","CartesianGrid","SimulationDisplay","colours","percentFormatter","Intl","NumberFormat","style","maximumFractionDigits","dateFormat","monthDayTickFormatter","tick","format","YearTickFormatter","ValueAtRisk","chosenPortfolio","showPortfolioForm","stockCode","setStockCode","quantity","setQuantity","portfolio","setPortfolio","method","setMethod","nDays","setNDays","percentile","setPercentile","period","setPeriod","timeStep","setTimeStep","nSimulations","setNSimulations","isFetching","setIsFetching","VaR","setVaR","ES","setES","historicalPrices","setHistoricalPrices","simulations","setSimulations","endingPrices","setEndingPrices","snackBarError","setSnackBarError","open","setOpen","fetchingError","setFetchingError","handleAddStock","e","preventDefault","length","updatedPortfolio","parseInt","handleResetPortfolio","handleVaRSubmit","Object","keys","post","n_days","time_step","num_simulations","use_weighted","then","res","fetchVaRSuccess","data","catch","err","fetchVaRError","resData","expected_shortfall","ending_prices","reformatted","map","d","date","sims","i","key","daysSimulation","push","roundToNumber","prices","ending","base","category","categorisedEndingPrices","k","range","amount","error","response","status","request","message","handleSnackBarClose","target","value","toUpperCase","maxLength","minLength","type","min","max","vertical","horizontal","left","bottom","right","top","position","offset","angle","propTypes","object","isRequired","bool","ValueAtRiskPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport moment from 'moment';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Input,\n  Button,\n  Grid,\n  Container,\n  CircularProgress,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Snackbar,\n  IconButton,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  Tooltip,\n  XAxis,\n  YAxis,\n  AreaChart,\n  Area,\n  CartesianGrid,\n} from 'recharts';\nimport SimulationDisplay from './SimulationDisplay';\n\nconst colours = [\n  '#396AB1',\n  '#DA7C30',\n  '#3E9651',\n  '#CC2529',\n  '#535154',\n  '#6B4C9A',\n  '#922428',\n  '#948B3D',\n];\n\nconst percentFormatter = Intl.NumberFormat('en-AU', {\n  style: 'percent',\n  maximumFractionDigits: 2,\n});\n\nconst dateFormat = 'DD/MM/YY';\n\nconst monthDayTickFormatter = (tick) => {\n  return moment(tick, dateFormat).format('DD/MM');\n};\n\nconst YearTickFormatter = (tick) => {\n  return moment(tick, dateFormat).format('YYYY');\n};\n\nexport function ValueAtRisk({ chosenPortfolio, showPortfolioForm }) {\n  // For creating a portfolio to calculate VaR & ES with\n  const [stockCode, setStockCode] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [portfolio, setPortfolio] = useState(chosenPortfolio);\n\n  // Parameters for calculation\n  const [method, setMethod] = useState('historical');\n  const [nDays, setNDays] = useState(1);\n  const [percentile, setPercentile] = useState(95);\n  const [period, setPeriod] = useState('2y');\n\n  // extra parameters for monte carlo simuation method\n  const [timeStep, setTimeStep] = useState(1);\n  const [nSimulations, setNSimulations] = useState(200);\n\n  // for fetching data from backend\n  const [isFetching, setIsFetching] = useState(false);\n  const [VaR, setVaR] = useState(null);\n  const [ES, setES] = useState(null);\n  const [historicalPrices, setHistoricalPrices] = useState(null);\n  const [simulations, setSimulations] = useState(null);\n  const [endingPrices, setEndingPrices] = useState(null);\n\n  // showing errors\n  const [snackBarError, setSnackBarError] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [fetchingError, setFetchingError] = useState(null);\n\n  useEffect(() => {\n    setPortfolio(chosenPortfolio);\n  }, [chosenPortfolio]);\n\n  // Methods for handling portfolio for simulation\n  const handleAddStock = (e) => {\n    e.preventDefault();\n\n    if (!stockCode || stockCode.length !== 3) return;\n\n    const updatedPortfolio = { ...portfolio };\n    if (!portfolio[stockCode]) {\n      updatedPortfolio[stockCode] = parseInt(quantity);\n    } else {\n      updatedPortfolio[stockCode] += parseInt(quantity);\n    }\n    setPortfolio(updatedPortfolio);\n\n    // Reset inputs\n    setStockCode('');\n    setQuantity(1);\n  };\n\n  const handleResetPortfolio = () => {\n    setPortfolio({});\n  };\n\n  // Fetching VaR and ES results using parameters given\n  const handleVaRSubmit = (e) => {\n    e.preventDefault();\n\n    if (Object.keys(portfolio).length === 0) {\n      // TODO: show error\n      setSnackBarError('Portfolio has no stocks!');\n      setOpen(true);\n      return;\n    }\n\n    setFetchingError(null);\n    setSnackBarError(null);\n    setIsFetching(true);\n\n    axios\n      .post('/analytics/VaR-ES-sim', {\n        portfolio,\n        n_days: parseInt(nDays),\n        percentile: parseInt(percentile),\n        period,\n        method: method === 'monte-w' ? 'monte' : method,\n        time_step: parseInt(timeStep),\n        num_simulations: parseInt(nSimulations),\n        use_weighted: method === 'monte-w',\n      })\n      .then((res) => fetchVaRSuccess(res.data))\n      .catch((err) => fetchVaRError(err));\n  };\n\n  const fetchVaRSuccess = (resData) => {\n    setIsFetching(false);\n    setFetchingError(null);\n    setSnackBarError(null);\n\n    const { VaR, expected_shortfall, data, ending_prices } = resData;\n    // console.log(resData);\n    setVaR(VaR);\n    setES(expected_shortfall);\n\n    if (data) {\n      // reformat data for display\n      const reformatted = data.map((d) => {\n        return { ...d, date: moment(d.date).format(dateFormat) };\n      });\n      setHistoricalPrices(reformatted);\n    } else {\n      setHistoricalPrices(null);\n    }\n\n    if (resData.simulations) {\n      // reformat simulation data for display\n      const sims = [];\n      for (let i = 0; i < Object.keys(resData.simulations).length; i++) {\n        const key = Object.keys(resData.simulations)[i];\n        const daysSimulation = resData.simulations[key];\n        sims.push(daysSimulation);\n      }\n      setSimulations(sims);\n    } else {\n      setSimulations(null);\n    }\n\n    if (ending_prices) {\n      // group the ending prices into categories\n      const roundToNumber = 2;\n      const prices = {};\n      for (let i = 0; i < ending_prices.length; i++) {\n        const ending = ending_prices[i]['Ending_Prices'];\n        const base = ending - (ending % roundToNumber);\n        const category = `${base} - ${base + roundToNumber - 1}`;\n        if (!prices[category]) {\n          prices[category] = 1;\n        } else {\n          prices[category] += 1;\n        }\n      }\n\n      // convert prices into a list for display\n      const categorisedEndingPrices = Object.keys(prices).map((k) => {\n        return { range: k, amount: prices[k] };\n      });\n\n      setEndingPrices(categorisedEndingPrices);\n    } else {\n      setEndingPrices(null);\n    }\n  };\n\n  const fetchVaRError = (error) => {\n    setIsFetching(false);\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      if (error.response.status === 422) {\n        // Snackbar error because it to do with form\n        setSnackBarError(\n          `${error.response.status} Error: ${error.response.data}`\n        );\n        setOpen(true);\n      } else {\n        setFetchingError(\n          `${error.response.status} Error: ${error.response.data}`\n        );\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      setFetchingError('Request was made but no response was received.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      setFetchingError(error.message);\n    }\n  };\n\n  const handleSnackBarClose = () => {\n    setOpen(false);\n    setSnackBarError(null);\n  };\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\" className=\"analysis-container\">\n        <h2 className=\"title\">\n          Value at Risk and\n          <br /> Expected Shortfall Calculation\n        </h2>\n        <div className=\"text\">\n          <p>\n            This tool calculates the <strong>Value at Risk (VaR)</strong> and{' '}\n            <strong>Expected Shortfall (ES)</strong> of a portfolio. The VaR\n            statistic refers to the maximum loss expected (or worst case\n            scenario) on a portfolio, over a given time period and given a\n            specified degree of confidence. The ES statistic is an alternative\n            to VaR that is more sensitive to the shape of the tail of the loss\n            distribution; it takes the mean of losses between the VaR level and\n            maximum loss level. There are several methods this tool can use to\n            calculate this risk:\n          </p>\n          <ul>\n            <li>\n              <strong>Historical Method</strong>: With this method, it\n              re-organizes actual historical returns and then assumes that\n              history will repeat itself from a risk perspective.\n            </li>\n            <li>\n              <strong>Variance-Covariance Method</strong>: This method assumes\n              that stock returns are normally distributed and bases the risk on\n              its expected return and standard deviation.\n            </li>\n            <li>\n              <strong>Monte Carlo Method</strong>: This involves simulating\n              future stock prices (using Geometric Browian Motion) and\n              calculates the value of risk from these hypothesised trials.\n            </li>\n          </ul>\n        </div>\n      </Container>\n\n      {/* Stocks in portfolio for simulation */}\n      <Container maxWidth=\"md\" className=\"analysis-container\">\n        <Grid container spacing={5} alignItems=\"center\" justify=\"center\">\n          <Grid xs={12} md={3} item>\n            <span>Portfolio to Calculate:</span>\n          </Grid>\n\n          {/* List of stocks in portfolio */}\n          <Grid item xs={12} md={9} container spacing={3}>\n            {Object.keys(portfolio).map((k) => (\n              <Grid key={k} item>\n                <span>\n                  {k}: {portfolio[k]}\n                </span>\n              </Grid>\n            ))}\n            {Object.keys(portfolio).length === 0 && (\n              <Grid item>\n                <span>Nothing added yet!</span>\n              </Grid>\n            )}\n          </Grid>\n\n          {/* Form to add stocks into portfolio for simulation */}\n          {showPortfolioForm && (\n            <Grid item xs={12}>\n              <form id=\"add-stock-to-portfolio-form\" onSubmit={handleAddStock}>\n                <Grid\n                  container\n                  spacing={3}\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={6} md={4}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"stock-code-label\">Stock Code</InputLabel>\n                      <Input\n                        placeholder=\"ex. ASX\"\n                        value={stockCode}\n                        onChange={(e) =>\n                          setStockCode(e.target.value.toUpperCase())\n                        }\n                        inputProps={{\n                          'aria-label': 'stock-code-input',\n                          maxLength: 3,\n                          minLength: 3,\n                        }}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"quantity\">Quantity</InputLabel>\n                      <Input\n                        value={quantity}\n                        onChange={(e) => setQuantity(e.target.value)}\n                        inputProps={{\n                          'aria-label': 'time-step-input',\n                          type: 'number',\n                          min: 1,\n                        }}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={4} md={2} container justify=\"center\">\n                    <Button\n                      type=\"submit\"\n                      id=\"add-stock-btn\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      Add Stock\n                    </Button>\n                  </Grid>\n                  <Grid item xs={4} md={3} container justify=\"center\">\n                    <Button\n                      onClick={handleResetPortfolio}\n                      id=\"reset-portfolo-btn\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      Reset Portfolio\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n\n      {/* Parameters for Calculating Value At Risk */}\n      <Container maxWidth=\"md\" className=\"analysis-container\">\n        <form id=\"VaR-ES-form\" onSubmit={handleVaRSubmit}>\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n            <Grid item xs={12} md={7}>\n              <FormControl fullWidth>\n                <InputLabel>Method</InputLabel>\n                <Select\n                  value={method}\n                  onChange={(e) => setMethod(e.target.value)}\n                >\n                  <MenuItem value=\"historical\">\n                    Using only Historical Data\n                  </MenuItem>\n                  <MenuItem value=\"covariance\">\n                    Variance-Covariance of Historical Data\n                  </MenuItem>\n                  <MenuItem value=\"monte\">\n                    Monte Carlo Simuation (non-weighted, geometric browian\n                    motion)\n                  </MenuItem>\n                  <MenuItem value=\"monte-w\">\n                    Monte Carlo Simuation (weighted, geometric browian motion)\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={6} md={4}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"n-days-label\">\n                  Number of Days to Simulate\n                </InputLabel>\n                <Input\n                  value={nDays}\n                  onChange={(e) => setNDays(e.target.value)}\n                  inputProps={{\n                    'aria-label': 'n-days-input',\n                    type: 'number',\n                    min: 1,\n                  }}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <FormControl fullWidth>\n                <InputLabel id=\"period-select-label\">\n                  Period of Historical Data Used\n                </InputLabel>\n                <Select\n                  labelId=\"period-select-label\"\n                  id=\"period-select\"\n                  value={period}\n                  onChange={(e) => setPeriod(e.target.value)}\n                >\n                  {/* 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max */}\n                  <MenuItem value=\"1mo\">1 months</MenuItem>\n                  <MenuItem value=\"3mo\">3 months</MenuItem>\n                  <MenuItem value=\"6mo\">6 months</MenuItem>\n                  <MenuItem value=\"1y\">1y</MenuItem>\n                  <MenuItem value=\"2y\">2y</MenuItem>\n                  <MenuItem value=\"5y\">5y</MenuItem>\n                  <MenuItem value=\"10y\">10y</MenuItem>\n                  <MenuItem value=\"max\">All</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={6} md={4}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"percentile-label\">Confidence Level</InputLabel>\n                <Input\n                  value={percentile}\n                  onChange={(e) => setPercentile(e.target.value)}\n                  inputProps={{\n                    'aria-label': 'percentile-input',\n                    type: 'number',\n                    max: 99,\n                    min: 1,\n                  }}\n                />\n              </FormControl>\n            </Grid>\n\n            {/* Extra parameters for monte carlo method */}\n            {(method === 'monte' || method === 'monte-w') && (\n              <React.Fragment>\n                <Grid item xs={6} md={5}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"n-simulations-label\">\n                      Number of Simulations\n                    </InputLabel>\n                    <Input\n                      value={nSimulations}\n                      onChange={(e) => setNSimulations(e.target.value)}\n                      inputProps={{\n                        'aria-label': 'number-of-simulations-input',\n                        type: 'number',\n                        max: 2000,\n                        min: 1,\n                      }}\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} md={5}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"time-step-label\">\n                      Time Step of Simulation\n                    </InputLabel>\n                    <Input\n                      value={timeStep}\n                      onChange={(e) => setTimeStep(e.target.value)}\n                      inputProps={{\n                        'aria-label': 'time-step-input',\n                        type: 'number',\n                        max: nDays,\n                        min: 1,\n                      }}\n                    />\n                  </FormControl>\n                </Grid>\n              </React.Fragment>\n            )}\n            <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                Calculate VaR & ES\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n\n      {isFetching && <CircularProgress />}\n\n      {/* Displaying any errors that occurred */}\n      {snackBarError && (\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleSnackBarClose}\n          message={snackBarError}\n          action={\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleSnackBarClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        />\n      )}\n      {fetchingError && <Alert severity=\"error\">{fetchingError}</Alert>}\n\n      {/* Displaying results of calculation */}\n      {!fetchingError && !isFetching && (VaR || ES) && (\n        <React.Fragment>\n          <h3>Results</h3>\n          <p>Value at Risk: {percentFormatter.format(VaR)}</p>\n          <p>Expected Shortfall: {percentFormatter.format(ES)}</p>\n\n          <ExpansionPanel className=\"analysis-container\">\n            <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"var-es-extra-content\"\n              id=\"var-es-header\"\n            >\n              {simulations && 'View Simulations Generated'}\n              {historicalPrices && 'View Historical Data Used'}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Grid container spacing={3}>\n                {/* Display Extra info for monte carlo simuation method */}\n                {simulations && (\n                  <Grid item xs={12}>\n                    <h6>Simulated Prices</h6>\n                    <SimulationDisplay data={simulations} timeStep={timeStep} />\n                  </Grid>\n                )}\n                {endingPrices && (\n                  <Grid item xs={12}>\n                    <h6>Distribution of Simulated Ending Prices</h6>\n                    <ResponsiveContainer width=\"80%\" height={400}>\n                      <AreaChart\n                        data={endingPrices}\n                        margin={{ left: 10, bottom: 50, right: 5, top: 5 }}\n                      >\n                        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                        <XAxis\n                          dataKey=\"range\"\n                          label={{\n                            value: 'Range of Simulated Ending Prices',\n                            position: 'insideBottom',\n                            offset: -10,\n                          }}\n                        />\n                        <YAxis\n                          dataKey=\"amount\"\n                          label={{\n                            value: 'Amount of Simulations',\n                            angle: -90,\n                            position: 'insideBottomLeft',\n                          }}\n                          name=\"Amount\"\n                        />\n                        <Tooltip />\n                        <Area dataKey=\"amount\" type=\"monotone\" name=\"Amount\" />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                )}\n\n                {/* Display Extra info for other methods */}\n                {historicalPrices && (\n                  <Grid item xs={12}>\n                    <h6 className=\"subtitle\">\n                      <strong>Historical Worth of Portfolio</strong>\n                    </h6>\n                    <ResponsiveContainer width=\"90%\" height={400}>\n                      <LineChart\n                        data={historicalPrices}\n                        margin={{ left: 5, bottom: 50, right: 5, top: 5 }}\n                      >\n                        <Tooltip />\n                        <XAxis\n                          dataKey=\"date\"\n                          tickFormatter={monthDayTickFormatter}\n                          minTickGap={30}\n                        />\n                        <XAxis\n                          dataKey=\"date\"\n                          tickLine={false}\n                          axisLine={false}\n                          tickFormatter={YearTickFormatter}\n                          xAxisId=\"year\"\n                          minTickGap={300}\n                        />\n                        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                        <YAxis domain={['auto', 'auto']} />\n                        <Line\n                          dataKey=\"Port_Value\"\n                          name=\"Portfolio Value\"\n                          dot={false}\n                        />\n                        {Object.keys(portfolio).map((k, i) => (\n                          <Line\n                            dataKey={k}\n                            key={k}\n                            dot={false}\n                            stroke={colours[i % colours.length]}\n                          />\n                        ))}\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </Grid>\n                )}\n              </Grid>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nValueAtRisk.propTypes = {\n  chosenPortfolio: PropTypes.object.isRequired,\n  showPortfolioForm: PropTypes.bool.isRequired,\n};\n\nexport default function ValueAtRiskPage() {\n  return (\n    <Container maxWidth=\"lg\">\n      <ValueAtRisk chosenPortfolio={{}} showPortfolioForm={true} />\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}