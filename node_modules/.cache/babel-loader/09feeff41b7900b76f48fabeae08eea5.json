{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PerformanceChangeGraph.js\";\nimport React from 'react';\nimport { Bar, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine, ResponsiveContainer, Brush, Line, ComposedChart } from 'recharts';\nimport moment from 'moment';\nconst dateFormat = 'DD/MM/YY';\nconst currencyFormatter = new Intl.NumberFormat('en-AU', {\n  style: 'currency',\n  currency: 'AUD'\n});\n\nconst monthDayTickFormatter = tick => {\n  return moment(tick, dateFormat).format('DD/MM');\n};\n\nconst YearTickFormatter = tick => {\n  return moment(tick, dateFormat).format('YYYY');\n};\n\nconst tooltipFormatter = (value, name, props) => {\n  return name === 'Daily Change' ? `${currencyFormatter.format(value)} (${props.payload.daily_change_percent}%)` : name === 'Total Change' ? `${currencyFormatter.format(value)} (${props.payload.total_change_percent}%)` : value;\n};\n\nexport default function PerformanceChangeGraph({\n  performance\n}) {\n  let data = performance;\n\n  if (typeof data === 'object') {\n    data = Object.values(data);\n  }\n\n  if (!performance) {\n    return null;\n  } // Formating data\n\n\n  data = data.map(d => {\n    const date = moment(d.date, 'YYYY-MM-DD').format(dateFormat);\n\n    if (d.daily_change > 0) {\n      return { ...d,\n        date,\n        positive: d.daily_change\n      };\n    } else {\n      return { ...d,\n        date,\n        negative: d.daily_change\n      };\n    }\n  });\n  data.sort((a, b) => moment(a.date, dateFormat) - moment(b.date, dateFormat));\n  return React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    data: data,\n    margin: {\n      top: 15,\n      bottom: 15,\n      left: 5,\n      right: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    vertical: false,\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    tickFormatter: monthDayTickFormatter,\n    minTickGap: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    tickLine: false,\n    axisLine: false,\n    tickFormatter: YearTickFormatter,\n    xAxisId: \"year\",\n    minTickGap: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    width: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    formatter: tooltipFormatter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(ReferenceLine, {\n    y: 0,\n    stroke: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    name: \"Daily Change\",\n    stackId: \"a\",\n    dataKey: \"negative\",\n    fill: \"#f85959\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    name: \"Daily Change\",\n    stackId: \"a\",\n    dataKey: \"positive\",\n    fill: \"#17b978\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    name: \"Total Change\",\n    dataKey: \"total_change\",\n    stroke: \"#278ea5\",\n    dot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Brush, {\n    dataKey: \"date\",\n    height: 30,\n    startIndex: data.length > 10 ? data.length - 10 : 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PerformanceChangeGraph.js"],"names":["React","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","ResponsiveContainer","Brush","Line","ComposedChart","moment","dateFormat","currencyFormatter","Intl","NumberFormat","style","currency","monthDayTickFormatter","tick","format","YearTickFormatter","tooltipFormatter","value","name","props","payload","daily_change_percent","total_change_percent","PerformanceChangeGraph","performance","data","Object","values","map","d","date","daily_change","positive","negative","sort","a","b","top","bottom","left","right","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine,\n  ResponsiveContainer,\n  Brush,\n  Line,\n  ComposedChart,\n} from 'recharts';\nimport moment from 'moment';\n\nconst dateFormat = 'DD/MM/YY';\n\nconst currencyFormatter = new Intl.NumberFormat('en-AU', {\n  style: 'currency',\n  currency: 'AUD',\n});\n\nconst monthDayTickFormatter = (tick) => {\n  return moment(tick, dateFormat).format('DD/MM');\n};\n\nconst YearTickFormatter = (tick) => {\n  return moment(tick, dateFormat).format('YYYY');\n};\n\nconst tooltipFormatter = (value, name, props) => {\n  return name === 'Daily Change'\n    ? `${currencyFormatter.format(value)} (${\n        props.payload.daily_change_percent\n      }%)`\n    : name === 'Total Change'\n    ? `${currencyFormatter.format(value)} (${\n        props.payload.total_change_percent\n      }%)`\n    : value;\n};\n\nexport default function PerformanceChangeGraph({ performance }) {\n  let data = performance;\n  if (typeof data === 'object') {\n    data = Object.values(data);\n  }\n\n  if (!performance) {\n    return null;\n  }\n\n  // Formating data\n  data = data.map((d) => {\n    const date = moment(d.date, 'YYYY-MM-DD').format(dateFormat);\n    if (d.daily_change > 0) {\n      return { ...d, date, positive: d.daily_change };\n    } else {\n      return { ...d, date, negative: d.daily_change };\n    }\n  });\n\n  data.sort((a, b) => moment(a.date, dateFormat) - moment(b.date, dateFormat));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <ComposedChart\n        data={data}\n        margin={{\n          top: 15,\n          bottom: 15,\n          left: 5,\n          right: 15,\n        }}\n      >\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"date\"\n          tickFormatter={monthDayTickFormatter}\n          minTickGap={30}\n        />\n        <XAxis\n          dataKey=\"date\"\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={YearTickFormatter}\n          xAxisId=\"year\"\n          minTickGap={300}\n        />\n        <YAxis width={40} />\n        <Tooltip formatter={tooltipFormatter} />\n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Bar\n          name=\"Daily Change\"\n          stackId=\"a\"\n          dataKey=\"negative\"\n          fill=\"#f85959\"\n        />\n        <Bar\n          name=\"Daily Change\"\n          stackId=\"a\"\n          dataKey=\"positive\"\n          fill=\"#17b978\"\n        />\n        <Line\n          type=\"monotone\"\n          name=\"Total Change\"\n          dataKey=\"total_change\"\n          stroke=\"#278ea5\"\n          dot={false}\n        />\n        <Brush\n          dataKey=\"date\"\n          height={30}\n          startIndex={data.length > 10 ? data.length - 10 : 0}\n        />\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}