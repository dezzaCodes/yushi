{"ast":null,"code":"/**\n * the actions of analytics stuff\n * dispatch different actions in different case\n */\nimport axios from 'axios';\nimport { TOP_GAINERS_LOADING, TOP_GAINERS_SUCCESS, TOP_GAINERS_FAILURE, TOP_DECLINES_LOADING, TOP_DECLINES_SUCCESS, TOP_DECLINES_FAILURE, TOP_COMPANIES_LOADING, TOP_COMPANIES_SUCCESS, TOP_COMPANIES_FAILURE, INDUSTRY_INDICES_LOADING, INDUSTRY_INDICES_SUCCESS, INDUSTRY_INDICES_FAILURE } from './types';\nexport const AnalyticsFeatures = {\n  TOP_GAINERS: 'TOP_GAINERS',\n  TOP_DECLINES: 'TOP_DECLINES',\n  TOP_COMPANIES: 'TOP_COMPANIES',\n  INDUSTRY_INDICES: 'INDUSTRY_INDICES'\n};\nexport function loadAnalyticsFeatureRequest(feature) {\n  let type = '';\n\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_LOADING;\n      break;\n\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_LOADING;\n      break;\n\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_LOADING;\n      break;\n\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_LOADING;\n      break;\n\n    default:\n      return;\n  }\n\n  return {\n    type\n  };\n}\nexport function loadAnalyticsFeatureSuccess(feature, data) {\n  let type = '';\n\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_SUCCESS;\n      break;\n\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_SUCCESS;\n      break;\n\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_SUCCESS;\n      break;\n\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_SUCCESS;\n      break;\n\n    default:\n      return;\n  }\n\n  return {\n    type,\n    error: null,\n    payload: {\n      data,\n      receivedAt: Date.now()\n    }\n  };\n}\nexport function loadAnalyticsFeatureFailure(feature, err) {\n  let type = '';\n\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_FAILURE;\n      break;\n\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_FAILURE;\n      break;\n\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_FAILURE;\n      break;\n\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_FAILURE;\n      break;\n\n    default:\n      return;\n  }\n\n  const {\n    status,\n    data\n  } = err;\n  return {\n    type,\n    error: true,\n    payload: {\n      status,\n      message: data,\n      receivedAt: Date.now()\n    }\n  };\n}\nexport function fetchTopGainers() {\n  return function (dispatch) {\n    const feature = AnalyticsFeatures.TOP_GAINERS;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n    return axios.get('/analytics/top-gainers').then(res => dispatch(loadAnalyticsFeatureSuccess(feature, res.data.gainers))).catch(err => dispatch(loadAnalyticsFeatureFailure(feature, err.response)));\n  };\n}\nexport function fetchTopDeclines() {\n  return function (dispatch) {\n    const feature = AnalyticsFeatures.TOP_DECLINES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n    return axios.get('/analytics/top-declines').then(res => dispatch(loadAnalyticsFeatureSuccess(feature, res.data.declines))).catch(err => dispatch(loadAnalyticsFeatureFailure(feature, err.response)));\n  };\n}\nexport function fetchTopCompanies() {\n  return function (dispatch) {\n    const feature = AnalyticsFeatures.TOP_COMPANIES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n    return axios.get('/analytics/top-companies').then(res => dispatch(loadAnalyticsFeatureSuccess(feature, res.data.companies))).catch(err => dispatch(loadAnalyticsFeatureFailure(feature, err.response)));\n  };\n}\nexport function fetchIndustryIndices() {\n  return function (dispatch) {\n    const feature = AnalyticsFeatures.INDUSTRY_INDICES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n    return axios.get('/analytics/industry-indices').then(res => dispatch(loadAnalyticsFeatureSuccess(feature, res.data.industries))).catch(err => dispatch(loadAnalyticsFeatureFailure(feature, err.response)));\n  };\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/actions/analytics.js"],"names":["axios","TOP_GAINERS_LOADING","TOP_GAINERS_SUCCESS","TOP_GAINERS_FAILURE","TOP_DECLINES_LOADING","TOP_DECLINES_SUCCESS","TOP_DECLINES_FAILURE","TOP_COMPANIES_LOADING","TOP_COMPANIES_SUCCESS","TOP_COMPANIES_FAILURE","INDUSTRY_INDICES_LOADING","INDUSTRY_INDICES_SUCCESS","INDUSTRY_INDICES_FAILURE","AnalyticsFeatures","TOP_GAINERS","TOP_DECLINES","TOP_COMPANIES","INDUSTRY_INDICES","loadAnalyticsFeatureRequest","feature","type","loadAnalyticsFeatureSuccess","data","error","payload","receivedAt","Date","now","loadAnalyticsFeatureFailure","err","status","message","fetchTopGainers","dispatch","get","then","res","gainers","catch","response","fetchTopDeclines","declines","fetchTopCompanies","companies","fetchIndustryIndices","industries"],"mappings":"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","sourcesContent":["/**\n * the actions of analytics stuff\n * dispatch different actions in different case\n */\nimport axios from 'axios';\nimport {\n  TOP_GAINERS_LOADING,\n  TOP_GAINERS_SUCCESS,\n  TOP_GAINERS_FAILURE,\n  TOP_DECLINES_LOADING,\n  TOP_DECLINES_SUCCESS,\n  TOP_DECLINES_FAILURE,\n  TOP_COMPANIES_LOADING,\n  TOP_COMPANIES_SUCCESS,\n  TOP_COMPANIES_FAILURE,\n  INDUSTRY_INDICES_LOADING,\n  INDUSTRY_INDICES_SUCCESS,\n  INDUSTRY_INDICES_FAILURE\n} from './types';\n\nexport const AnalyticsFeatures = {\n  TOP_GAINERS: 'TOP_GAINERS',\n  TOP_DECLINES: 'TOP_DECLINES',\n  TOP_COMPANIES: 'TOP_COMPANIES',\n  INDUSTRY_INDICES: 'INDUSTRY_INDICES'\n};\n\nexport function loadAnalyticsFeatureRequest(feature) {\n  let type = '';\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_LOADING;\n      break;\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_LOADING;\n      break;\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_LOADING;\n      break;\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_LOADING;\n      break;\n    default:\n      return;\n  }\n  return { type };\n}\n\nexport function loadAnalyticsFeatureSuccess(feature, data) {\n  let type = '';\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_SUCCESS;\n      break;\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_SUCCESS;\n      break;\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_SUCCESS;\n      break;\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_SUCCESS;\n      break;\n    default:\n      return;\n  }\n  return {\n    type,\n    error: null,\n    payload: { data, receivedAt: Date.now() }\n  };\n}\n\nexport function loadAnalyticsFeatureFailure(feature, err) {\n  let type = '';\n  switch (feature) {\n    case AnalyticsFeatures.TOP_GAINERS:\n      type = TOP_GAINERS_FAILURE;\n      break;\n    case AnalyticsFeatures.TOP_DECLINES:\n      type = TOP_DECLINES_FAILURE;\n      break;\n    case AnalyticsFeatures.TOP_COMPANIES:\n      type = TOP_COMPANIES_FAILURE;\n      break;\n    case AnalyticsFeatures.INDUSTRY_INDICES:\n      type = INDUSTRY_INDICES_FAILURE;\n      break;\n    default:\n      return;\n  }\n  const { status, data } = err;\n  return {\n    type,\n    error: true,\n    payload: { status, message: data, receivedAt: Date.now() }\n  };\n}\n\nexport function fetchTopGainers() {\n  return function(dispatch) {\n    const feature = AnalyticsFeatures.TOP_GAINERS;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n\n    return axios\n      .get('/analytics/top-gainers')\n      .then(res =>\n        dispatch(loadAnalyticsFeatureSuccess(feature, res.data.gainers))\n      )\n      .catch(err =>\n        dispatch(loadAnalyticsFeatureFailure(feature, err.response))\n      );\n  };\n}\n\nexport function fetchTopDeclines() {\n  return function(dispatch) {\n    const feature = AnalyticsFeatures.TOP_DECLINES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n\n    return axios\n      .get('/analytics/top-declines')\n      .then(res =>\n        dispatch(loadAnalyticsFeatureSuccess(feature, res.data.declines))\n      )\n      .catch(err =>\n        dispatch(loadAnalyticsFeatureFailure(feature, err.response))\n      );\n  };\n}\n\nexport function fetchTopCompanies() {\n  return function(dispatch) {\n    const feature = AnalyticsFeatures.TOP_COMPANIES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n\n    return axios\n      .get('/analytics/top-companies')\n      .then(res =>\n        dispatch(loadAnalyticsFeatureSuccess(feature, res.data.companies))\n      )\n      .catch(err =>\n        dispatch(loadAnalyticsFeatureFailure(feature, err.response))\n      );\n  };\n}\n\nexport function fetchIndustryIndices() {\n  return function(dispatch) {\n    const feature = AnalyticsFeatures.INDUSTRY_INDICES;\n    dispatch(loadAnalyticsFeatureRequest(feature));\n\n    return axios\n      .get('/analytics/industry-indices')\n      .then(res =>\n        dispatch(loadAnalyticsFeatureSuccess(feature, res.data.industries))\n      )\n      .catch(err =>\n        dispatch(loadAnalyticsFeatureFailure(feature, err.response))\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}