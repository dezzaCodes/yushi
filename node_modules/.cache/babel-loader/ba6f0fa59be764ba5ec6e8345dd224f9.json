{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PortfolioHistorical.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport PerformanceChangeGraph from './PerformanceChangeGraph';\nimport Error from '../Error';\nimport { Button, Grid } from '@material-ui/core';\n\nfunction PortfolioHistorical({\n  isFetching,\n  error,\n  data,\n  portfolioID,\n  refreshGraph\n}) {\n  const [showAllWarnings, setShowAllWarnings] = React.useState(false);\n  React.useEffect(() => {\n    setShowAllWarnings(false);\n  }, [data]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, isFetching && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), error && React.createElement(Error, Object.assign({}, error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), !isFetching && data && data[portfolioID] && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, data[portfolioID].errors && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"error\",\n    onClick: () => setShowAllWarnings(!showAllWarnings),\n    className: \"click\",\n    style: {\n      marginBottom: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"There where some errors with calculating historical performance.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"Try refreshing the graph or view individual performance of holdings below.\"), showAllWarnings && React.createElement(\"ul\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, data[portfolioID].errors.map((e, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, e))))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"row\",\n    justify: \"space-between\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Portfolio Historical Performance\"), React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"(From Past Year / Date Bought)\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: refreshGraph,\n    color: \"primary\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Refresh Graph\"))), React.createElement(PerformanceChangeGraph, {\n    performance: data[portfolioID]['performance'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n}\n\nPortfolioHistorical.propTypes = {\n  isFetchingGroup: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  data: PropTypes.object.isRequired,\n  portfolioID: PropTypes.number.isRequired,\n  refreshGraph: PropTypes.func.isRequired\n};\n\nfunction HoldingHistorical({\n  isFetchingGroup,\n  error,\n  data,\n  portfolioID,\n  stockCode\n}) {\n  const [holding, setHolding] = React.useState(null);\n  const [performanceData, setPerformanceData] = React.useState(null);\n  React.useEffect(() => {\n    const portfolio = data[portfolioID];\n    if (!portfolio) return;\n    const holding = portfolio.holding_performance.filter(h => h.code === stockCode);\n\n    if (holding.length > 0) {\n      setHolding(holding[0]);\n      setPerformanceData(holding[0].performance);\n    }\n  }, [data, portfolioID, stockCode]);\n  return React.createElement(\"div\", {\n    className: \"performance-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, isFetchingGroup && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), error && React.createElement(Error, Object.assign({}, error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), !isFetchingGroup && performanceData && React.createElement(PerformanceChangeGraph, {\n    performance: performanceData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), !isFetchingGroup && holding && !performanceData && React.createElement(Alert, {\n    severity: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"There was an error in fetching this holding stock's historical performance. Try refreshing the graph.\"));\n}\n\nHoldingHistorical.propTypes = {\n  isFetchingGroup: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  data: PropTypes.object.isRequired,\n  portfolioID: PropTypes.number.isRequired,\n  stockCode: PropTypes.string.isRequired\n};\nexport default PortfolioHistorical;\nexport { PortfolioHistorical, HoldingHistorical };","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PortfolioHistorical.js"],"names":["React","PropTypes","CircularProgress","Alert","PerformanceChangeGraph","Error","Button","Grid","PortfolioHistorical","isFetching","error","data","portfolioID","refreshGraph","showAllWarnings","setShowAllWarnings","useState","useEffect","errors","marginBottom","map","e","i","propTypes","isFetchingGroup","bool","isRequired","object","number","func","HoldingHistorical","stockCode","holding","setHolding","performanceData","setPerformanceData","portfolio","holding_performance","filter","h","code","length","performance","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport PerformanceChangeGraph from './PerformanceChangeGraph';\nimport Error from '../Error';\nimport { Button, Grid } from '@material-ui/core';\n\nfunction PortfolioHistorical({\n  isFetching,\n  error,\n  data,\n  portfolioID,\n  refreshGraph,\n}) {\n  const [showAllWarnings, setShowAllWarnings] = React.useState(false);\n\n  React.useEffect(() => {\n    setShowAllWarnings(false);\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {isFetching && <CircularProgress />}\n      {error && <Error {...error} />}\n      {!isFetching && data && data[portfolioID] && (\n        <React.Fragment>\n          {data[portfolioID].errors && (\n            <React.Fragment>\n              <Alert\n                severity=\"error\"\n                onClick={() => setShowAllWarnings(!showAllWarnings)}\n                className=\"click\"\n                style={{ marginBottom: '20px' }}\n              >\n                There where some errors with calculating historical performance.\n                <br />\n                Try refreshing the graph or view individual performance of\n                holdings below.\n              </Alert>\n              {showAllWarnings && (\n                <ul className=\"errors\">\n                  {data[portfolioID].errors.map((e, i) => (\n                    <li key={i}>\n                      <Alert severity=\"warning\">{e}</Alert>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </React.Fragment>\n          )}\n          <Grid\n            container\n            item\n            xs={12}\n            direction=\"row\"\n            justify=\"space-between\"\n            spacing={4}\n          >\n            <Grid item>\n              <h5 className=\"subtitle\">Portfolio Historical Performance</h5>\n              <h6 className=\"subtitle\">(From Past Year / Date Bought)</h6>\n            </Grid>\n            <Grid item>\n              <Button onClick={refreshGraph} color=\"primary\" variant=\"outlined\">\n                Refresh Graph\n              </Button>\n            </Grid>\n          </Grid>\n          <PerformanceChangeGraph\n            performance={data[portfolioID]['performance']}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nPortfolioHistorical.propTypes = {\n  isFetchingGroup: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  data: PropTypes.object.isRequired,\n  portfolioID: PropTypes.number.isRequired,\n  refreshGraph: PropTypes.func.isRequired,\n};\n\nfunction HoldingHistorical({\n  isFetchingGroup,\n  error,\n  data,\n  portfolioID,\n  stockCode,\n}) {\n  const [holding, setHolding] = React.useState(null);\n  const [performanceData, setPerformanceData] = React.useState(null);\n\n  React.useEffect(() => {\n    const portfolio = data[portfolioID];\n    if (!portfolio) return;\n    const holding = portfolio.holding_performance.filter(\n      (h) => h.code === stockCode\n    );\n\n    if (holding.length > 0) {\n      setHolding(holding[0]);\n      setPerformanceData(holding[0].performance);\n    }\n  }, [data, portfolioID, stockCode]);\n\n  return (\n    <div className=\"performance-container\">\n      {isFetchingGroup && <CircularProgress />}\n      {error && <Error {...error} />}\n      {!isFetchingGroup && performanceData && (\n        <PerformanceChangeGraph performance={performanceData} />\n      )}\n      {!isFetchingGroup && holding && !performanceData && (\n        <Alert severity=\"error\">\n          There was an error in fetching this holding stock's historical\n          performance. Try refreshing the graph.\n        </Alert>\n      )}\n    </div>\n  );\n}\n\nHoldingHistorical.propTypes = {\n  isFetchingGroup: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  data: PropTypes.object.isRequired,\n  portfolioID: PropTypes.number.isRequired,\n  stockCode: PropTypes.string.isRequired,\n};\n\nexport default PortfolioHistorical;\nexport { PortfolioHistorical, HoldingHistorical };\n"]},"metadata":{},"sourceType":"module"}