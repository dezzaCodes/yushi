{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PortfolioDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TextField, TableContainer, TablePagination, Button, Input, FormControl, InputLabel, Select, MenuItem, CircularProgress, Grid } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\nimport { addHoldingToPortfolio, deleteHoldingFromPortfolio, fetchPortfolioHistoricalPerformanceIfNeeded, fetchPortfoliosPerformance, fetchHoldingGroupHistoricalPerformance, fetchPortfolioHistoricalPerformance } from '../../actions/portfolios';\nimport IndPortfolioPerformance from './IndPortfolioPerformance';\nimport { currencyFormatter } from './PortfoliosPerformance';\nimport { HoldingHistorical } from './PortfolioHistorical';\nimport { ValueAtRisk } from '../AnalysisPage/ValueAtRisk';\nconst useStyles = makeStyles(theme => ({\n  tableHeader: {\n    backgroundColor: '#428bd5',\n    textAlign: 'center'\n  },\n  tableHeaderRows: {\n    color: '#edf4fb',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tableCell: {\n    textAlign: 'center'\n  },\n  actions: {\n    display: 'flex'\n  },\n  button: {\n    marginLeft: '5px',\n    marginRight: '5px'\n  },\n  form: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(3)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200\n  },\n  sectionHeading: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(2)\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n\nfunction PortfolioDetail({\n  id,\n  name,\n  holdings,\n  dispatch,\n  dayPerformance,\n  historicalPerformance,\n  processingAdd\n}) {\n  var today = new Date();\n  const classes = useStyles();\n  const [stockCode, setStockCode] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [price, setPrice] = React.useState('');\n  const [date, setDate] = React.useState(today.getFullYear() + '-' + String(today.getMonth() + 1).padStart(2, '0') + '-' + String(today.getDate()).padStart(2, '0'));\n  const [holdingGroups, setHoldingGroups] = React.useState({});\n  const [holdingGroupHistory, setHoldingGroupHistory] = React.useState('');\n  React.useEffect(() => {\n    // need to update portfolio performance\n    dispatch(fetchPortfoliosPerformance());\n    dispatch(fetchPortfolioHistoricalPerformanceIfNeeded(id)); // group holdings by stock code\n\n    const tmp = {};\n    holdings.forEach(h => {\n      if (!tmp[h.stock_code]) {\n        tmp[h.stock_code] = [];\n      }\n\n      tmp[h.stock_code].push(h);\n    });\n    setHoldingGroups(tmp); // reset view for holding historical perf\n\n    setHoldingGroupHistory('');\n  }, [holdings, id, dispatch, setHoldingGroups]);\n\n  const handleAddHolding = e => {\n    e.preventDefault();\n    dispatch(addHoldingToPortfolio({\n      id,\n      name,\n      holdings\n    }, stockCode, price, quantity, date)); // Reset form\n\n    setStockCode('');\n    setQuantity('');\n    setPrice('');\n    getDate();\n  };\n\n  const getDate = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    setDate(yyyy + '-' + mm + '-' + dd);\n  };\n\n  const handleDeleteHolding = holding => {\n    dispatch(deleteHoldingFromPortfolio(holding, {\n      id,\n      name,\n      holdings\n    }));\n  };\n\n  const handleRefreshHistoricalPerfGraph = () => {\n    dispatch(fetchPortfolioHistoricalPerformance(id));\n  };\n\n  const handleRefreshStockHistorical = () => {\n    if (holdingGroupHistory) {\n      dispatch(fetchHoldingGroupHistoricalPerformance(id, holdingGroupHistory));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Portfolio: \", name.toUpperCase()), React.createElement(IndPortfolioPerformance, Object.assign({\n    portfolioID: id\n  }, dayPerformance, {\n    historicalPerformance: historicalPerformance,\n    handleRefreshHistoricalPerfGraph: handleRefreshHistoricalPerfGraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    className: `subtitle ${classes.sectionHeading}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Individual Holdings Details\"), React.createElement(\"form\", {\n    autoComplete: \"off\",\n    className: classes.form,\n    onSubmit: handleAddHolding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"stock-code\",\n    label: \"Stock code\",\n    value: stockCode,\n    onChange: e => setStockCode(e.target.value.toUpperCase()),\n    inputProps: {\n      minLength: 3,\n      maxLength: 3\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Quantity *\"), React.createElement(Input, {\n    id: \"quantity\",\n    type: \"number\",\n    required: true,\n    value: quantity,\n    onChange: e => setQuantity(Math.round(e.target.value)),\n    inputProps: {\n      min: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Price *\"), React.createElement(Input, {\n    id: \"price\",\n    type: \"number\",\n    required: true,\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    inputProps: {\n      min: 0.01,\n      step: 0.01\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"date\",\n    label: \"Date Bought\",\n    type: \"date\",\n    value: date,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => setDate(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, processingAdd && React.createElement(CircularProgress, {\n    color: \"inherit\",\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), \"Add Stock\")))), React.createElement(HoldingList, {\n    data: holdings,\n    fillWithEmpty: true,\n    handleDelete: handleDeleteHolding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), holdingGroups && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: `subtitle ${classes.sectionHeading}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"Stock Holding Historical Performance (From Past Year / Date Bought)\"), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Choose Stock Holding To View:\"), React.createElement(Select, {\n    className: classes.formControl,\n    value: holdingGroupHistory,\n    onChange: e => setHoldingGroupHistory(e.target.value),\n    inputProps: {\n      name: 'stock-holding',\n      id: 'stock-holding'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"None\"), Object.keys(holdingGroups).map((k, i) => React.createElement(MenuItem, {\n    value: k,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, k)))), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: handleRefreshStockHistorical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Refresh Graph\"))), holdingGroupHistory && React.createElement(HoldingHistorical, Object.assign({}, historicalPerformance, {\n    portfolioID: id,\n    stockCode: holdingGroupHistory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    style: {\n      marginTop: '3rem',\n      marginBottom: '3rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"Analytical tools for Portfolio\"), React.createElement(PortfolioValueAtRisk, {\n    holdings: holdings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }));\n}\n\nPortfolioDetail.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  holdings: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  dayPerformance: PropTypes.object.isRequired,\n  historicalPerformance: PropTypes.object.isRequired\n};\n\nfunction HoldingList({\n  data,\n  fillWithEmpty,\n  handleDelete\n}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n  return React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, \"Code\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, \"Price Purchased\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, \"Current Price\"), React.createElement(TableCell, {\n    className: classes.tableHeaderRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, \"Date Purchased\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((h, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, h.id), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, h.stock_code.toUpperCase()), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, h.quantity), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, currencyFormatter.format(h.price)), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, currencyFormatter.format(h.stock.price)), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, moment(h.date).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    disableElevation: true,\n    onClick: () => handleDelete(h),\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, \"Remove Stock\")))), data.length > 5 && fillWithEmpty && emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  })))), data.length > 5 && React.createElement(TablePagination, {\n    component: \"div\",\n    rowsPerPageOptions: [5, 10, 25],\n    count: data.length,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }));\n}\n\nHoldingList.propTypes = {\n  data: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nfunction PortfolioValueAtRisk({\n  holdings\n}) {\n  const [chosen, setChosen] = React.useState({});\n  React.useEffect(() => {\n    // go through all the holdings, count the number of total quantity for each stock there are\n    const stocks = {};\n\n    for (let i = 0; i < holdings.length; i++) {\n      const h = holdings[i];\n\n      if (stocks[h.stock_code]) {\n        stocks[h.stock_code] += h.quantity;\n      } else {\n        stocks[h.stock_code] = h.quantity;\n      }\n    }\n\n    setChosen(stocks);\n  }, [holdings]);\n  return React.createElement(ValueAtRisk, {\n    chosenPortfolio: chosen,\n    showPortfolioForm: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  });\n}\n\nexport default PortfolioDetail;","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/PortfolioPage/PortfolioDetail.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableCell","TableBody","TextField","TableContainer","TablePagination","Button","Input","FormControl","InputLabel","Select","MenuItem","CircularProgress","Grid","DeleteIcon","moment","addHoldingToPortfolio","deleteHoldingFromPortfolio","fetchPortfolioHistoricalPerformanceIfNeeded","fetchPortfoliosPerformance","fetchHoldingGroupHistoricalPerformance","fetchPortfolioHistoricalPerformance","IndPortfolioPerformance","currencyFormatter","HoldingHistorical","ValueAtRisk","useStyles","theme","tableHeader","backgroundColor","textAlign","tableHeaderRows","color","fontWeight","tableCell","actions","display","button","marginLeft","marginRight","form","marginBottom","spacing","marginTop","formControl","margin","minWidth","sectionHeading","row","justifyContent","alignItems","PortfolioDetail","id","name","holdings","dispatch","dayPerformance","historicalPerformance","processingAdd","today","Date","classes","stockCode","setStockCode","useState","quantity","setQuantity","price","setPrice","date","setDate","getFullYear","String","getMonth","padStart","getDate","holdingGroups","setHoldingGroups","holdingGroupHistory","setHoldingGroupHistory","useEffect","tmp","forEach","h","stock_code","push","handleAddHolding","e","preventDefault","dd","mm","yyyy","handleDeleteHolding","holding","handleRefreshHistoricalPerfGraph","handleRefreshStockHistorical","toUpperCase","target","value","minLength","maxLength","Math","round","min","step","shrink","Object","keys","map","k","i","propTypes","number","isRequired","string","array","func","object","HoldingList","data","fillWithEmpty","handleDelete","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","handleChangeRowsPerPage","parseInt","emptyRows","length","slice","format","stock","height","PortfolioValueAtRisk","chosen","setChosen","stocks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TextField,\n  TableContainer,\n  TablePagination,\n  Button,\n  Input,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  CircularProgress,\n  Grid,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\n\nimport {\n  addHoldingToPortfolio,\n  deleteHoldingFromPortfolio,\n  fetchPortfolioHistoricalPerformanceIfNeeded,\n  fetchPortfoliosPerformance,\n  fetchHoldingGroupHistoricalPerformance,\n  fetchPortfolioHistoricalPerformance,\n} from '../../actions/portfolios';\nimport IndPortfolioPerformance from './IndPortfolioPerformance';\nimport { currencyFormatter } from './PortfoliosPerformance';\nimport { HoldingHistorical } from './PortfolioHistorical';\nimport { ValueAtRisk } from '../AnalysisPage/ValueAtRisk';\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    backgroundColor: '#428bd5',\n    textAlign: 'center',\n  },\n  tableHeaderRows: {\n    color: '#edf4fb',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n\ttextAlign: 'center',\n  },\n  actions: {\n    display: 'flex',\n  },\n  button: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  },\n  form: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  sectionHeading: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(2),\n  },\n  row: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nfunction PortfolioDetail({\n  id,\n  name,\n  holdings,\n  dispatch,\n  dayPerformance,\n  historicalPerformance,\n  processingAdd,\n}) {\n  var today = new Date();\n  const classes = useStyles();\n  const [stockCode, setStockCode] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [price, setPrice] = React.useState('');\n  const [date, setDate] = React.useState(\n    today.getFullYear() +\n      '-' +\n      String(today.getMonth() + 1).padStart(2, '0') +\n      '-' +\n      String(today.getDate()).padStart(2, '0')\n  );\n  const [holdingGroups, setHoldingGroups] = React.useState({});\n  const [holdingGroupHistory, setHoldingGroupHistory] = React.useState('');\n\n  React.useEffect(() => {\n    // need to update portfolio performance\n    dispatch(fetchPortfoliosPerformance());\n    dispatch(fetchPortfolioHistoricalPerformanceIfNeeded(id));\n\n    // group holdings by stock code\n    const tmp = {};\n    holdings.forEach((h) => {\n      if (!tmp[h.stock_code]) {\n        tmp[h.stock_code] = [];\n      }\n      tmp[h.stock_code].push(h);\n    });\n    setHoldingGroups(tmp);\n\n    // reset view for holding historical perf\n    setHoldingGroupHistory('');\n  }, [holdings, id, dispatch, setHoldingGroups]);\n\n  const handleAddHolding = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      addHoldingToPortfolio(\n        { id, name, holdings },\n        stockCode,\n        price,\n        quantity,\n        date\n      )\n    );\n\n    // Reset form\n    setStockCode('');\n    setQuantity('');\n    setPrice('');\n    getDate();\n  };\n\n  const getDate = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    setDate(yyyy + '-' + mm + '-' + dd);\n  };\n\n  const handleDeleteHolding = (holding) => {\n    dispatch(deleteHoldingFromPortfolio(holding, { id, name, holdings }));\n  };\n\n  const handleRefreshHistoricalPerfGraph = () => {\n    dispatch(fetchPortfolioHistoricalPerformance(id));\n  };\n\n  const handleRefreshStockHistorical = () => {\n    if (holdingGroupHistory) {\n      dispatch(fetchHoldingGroupHistoricalPerformance(id, holdingGroupHistory));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h2 className=\"title\">Portfolio: {name.toUpperCase()}</h2>\n\n      {/* Displays Performance of individual Portfolio */}\n      <IndPortfolioPerformance\n        portfolioID={id}\n        {...dayPerformance}\n        historicalPerformance={historicalPerformance}\n        handleRefreshHistoricalPerfGraph={handleRefreshHistoricalPerfGraph}\n      />\n\n      <h5 className={`subtitle ${classes.sectionHeading}`}>\n        Individual Holdings Details\n      </h5>\n\n      {/* form for adding holdings */}\n      <form\n        autoComplete=\"off\"\n        className={classes.form}\n        onSubmit={handleAddHolding}\n      >\n        <Grid container spacing={3} justify=\"flex-start\" alignItems=\"center\">\n          <Grid item>\n            <TextField\n              id=\"stock-code\"\n              label=\"Stock code\"\n              value={stockCode}\n              onChange={(e) => setStockCode(e.target.value.toUpperCase())}\n              inputProps={{ minLength: 3, maxLength: 3 }}\n              required={true}\n            />\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <InputLabel htmlFor=\"quantity\">Quantity *</InputLabel>\n              <Input\n                id=\"quantity\"\n                type=\"number\"\n                required={true}\n                value={quantity}\n                onChange={(e) => setQuantity(Math.round(e.target.value))}\n                inputProps={{ min: 1 }}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <InputLabel htmlFor=\"price\">Price *</InputLabel>\n              <Input\n                id=\"price\"\n                type=\"number\"\n                required={true}\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n                inputProps={{ min: 0.01, step: 0.01 }}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl>\n              <TextField\n                id=\"date\"\n                label=\"Date Bought\"\n                type=\"date\"\n                value={date}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disableElevation\n              type=\"submit\"\n            >\n              {processingAdd && (\n                <CircularProgress color=\"inherit\" size=\"1rem\" />\n              )}\n              Add Stock\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n\n      <HoldingList\n        data={holdings}\n        fillWithEmpty={true}\n        handleDelete={handleDeleteHolding}\n      />\n\n      {/* View historical performance of specific stock */}\n      {holdingGroups && (\n        <React.Fragment>\n          <h5 className={`subtitle ${classes.sectionHeading}`}>\n            Stock Holding Historical Performance (From Past Year / Date Bought)\n          </h5>\n\n          {/* Choosing which stock holding to view historical performance */}\n          <div className={classes.row}>\n            <FormControl className={classes.formControl}>\n              <label>Choose Stock Holding To View:</label>\n              <Select\n                className={classes.formControl}\n                value={holdingGroupHistory}\n                onChange={(e) => setHoldingGroupHistory(e.target.value)}\n                inputProps={{\n                  name: 'stock-holding',\n                  id: 'stock-holding',\n                }}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n\n                {Object.keys(holdingGroups).map((k, i) => (\n                  <MenuItem value={k} key={i}>\n                    {k}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={handleRefreshStockHistorical}\n            >\n              Refresh Graph\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n\n      {/* Show chosen holding group historical performance  */}\n      {holdingGroupHistory && (\n        <HoldingHistorical\n          {...historicalPerformance}\n          portfolioID={id}\n          stockCode={holdingGroupHistory}\n        />\n      )}\n\n      {/* Analytical tools for Portfolio */}\n      <hr style={{ marginTop: '3rem', marginBottom: '3rem' }} />\n      <h5 className=\"subtitle\">Analytical tools for Portfolio</h5>\n      <PortfolioValueAtRisk holdings={holdings} />\n    </React.Fragment>\n  );\n}\n\nPortfolioDetail.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  holdings: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  dayPerformance: PropTypes.object.isRequired,\n  historicalPerformance: PropTypes.object.isRequired,\n};\n\nfunction HoldingList({ data, fillWithEmpty, handleDelete }) {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  return (\n    <TableContainer>\n      <Table size=\"small\">\n        <TableHead className={classes.tableHeader}>\n          <TableRow>\n            <TableCell className={classes.tableHeaderRows}>ID</TableCell>\n            <TableCell className={classes.tableHeaderRows}>Code</TableCell>\n            <TableCell className={classes.tableHeaderRows}>Quantity</TableCell>\n            <TableCell className={classes.tableHeaderRows}>\n              Price Purchased\n            </TableCell>\n            <TableCell className={classes.tableHeaderRows}>\n              Current Price\n            </TableCell>\n            <TableCell className={classes.tableHeaderRows}>\n              Date Purchased\n            </TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((h, i) => (\n              <TableRow key={i}>\n                <TableCell className={classes.tableCell}>{h.id}</TableCell>\n                <TableCell className={classes.tableCell}>{h.stock_code.toUpperCase()}</TableCell>\n                <TableCell className={classes.tableCell}>{h.quantity}</TableCell>\n                <TableCell className={classes.tableCell}>{currencyFormatter.format(h.price)}</TableCell>\n                <TableCell className={classes.tableCell}>{currencyFormatter.format(h.stock.price)}</TableCell>\n                <TableCell className={classes.tableCell}>{moment(h.date).format('DD/MM/YYYY')}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n\n                    disableElevation\n                    onClick={() => handleDelete(h)}\n                    className={classes.button}\n                  >\n                    Remove Stock\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          {data.length > 5 && fillWithEmpty && emptyRows > 0 && (\n            <TableRow style={{ height: 48 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {data.length > 5 && (\n        <TablePagination\n          component=\"div\"\n          rowsPerPageOptions={[5, 10, 25]}\n          count={data.length}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      )}\n    </TableContainer>\n  );\n}\n\nHoldingList.propTypes = {\n  data: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nfunction PortfolioValueAtRisk({ holdings }) {\n  const [chosen, setChosen] = React.useState({});\n\n  React.useEffect(() => {\n    // go through all the holdings, count the number of total quantity for each stock there are\n    const stocks = {};\n    for (let i = 0; i < holdings.length; i++) {\n      const h = holdings[i];\n      if (stocks[h.stock_code]) {\n        stocks[h.stock_code] += h.quantity;\n      } else {\n        stocks[h.stock_code] = h.quantity;\n      }\n    }\n\n    setChosen(stocks);\n  }, [holdings]);\n\n  return <ValueAtRisk chosenPortfolio={chosen} showPortfolioForm={false} />;\n}\n\nexport default PortfolioDetail;\n"]},"metadata":{},"sourceType":"module"}