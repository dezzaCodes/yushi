{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/ScreenerPage/StockScreener.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FormControl, Select, MenuItem, InputLabel, Button, Grid, CircularProgress } from '@material-ui/core';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Slider from '@material-ui/core/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ScreenerDisplay from './ScreenerDisplay';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport './screenerStyle.css';\nconst marks = [{\n  value: 0\n}, {\n  value: 10\n}, {\n  value: 20\n}, {\n  value: 30\n}, {\n  value: 40\n}, {\n  value: -10\n}, {\n  value: -20\n}, {\n  value: -30\n}, {\n  value: -40\n}];\nconst marks2 = [{\n  value: 0\n}, {\n  value: 10\n}, {\n  value: 15\n}, {\n  value: 5\n}, {\n  value: -5\n}, {\n  value: -10\n}, {\n  value: -15\n}];\nconst CoolSlider = withStyles({\n  root: {\n    color: '#76abe0',\n    height: 8\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -5,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-125% + 4px)'\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);\n\nfunction StockScreener() {\n  // Hooks for stock screener form - declare new state called strategy\n  const [strategy, setStrategy] = useState('yield'); // Hooks for fetching data from backend\n\n  const [isFetching, setIsFetching] = useState(null);\n  const [stocks, setStocks] = useState(null); // Custom Strats\n\n  const [divYield, setYield] = useState([0, 0]);\n  const [PE, setPE] = useState([0, 0]);\n  const [ROE, setROE] = useState([0, 0]); // Hooks for showing errors\n\n  const [fetchingError, setFetchingError] = useState(null); // Style Sheet\n\n  const style = {\n    width: '30rem',\n    height: '15rem',\n    top: '110px',\n    right: '100px'\n  };\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsFetching(true);\n    setFetchingError(null); // Make post request to backend to screener\n\n    axios.post('/analytics/screener', {\n      strat_value: strategy,\n      div_Yield: divYield,\n      PE_value: PE,\n      ROE_value: ROE\n    }).then(response => {\n      // data stored in response\n      // load returned stocks into state and display into table\\\n      fetchSuccess(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Do stuff after fetch is succesfful \n\n\n  const fetchSuccess = data => {\n    setIsFetching(false); // get stuff ready for table\n\n    setStocks(data);\n  };\n\n  const handlePEChange = (event, newValue) => {\n    setPE(newValue);\n  };\n\n  const handleROEChange = (event, newValue) => {\n    setROE(newValue);\n  };\n\n  const handleYieldChange = (event, newValue) => {\n    setYield(newValue);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"xl\",\n    className: \"analysis-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Stock Screener\"), React.createElement(Row, {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"The stock screener allows you to screen through the stocks listed on the ASX300 based on your investing strategy/goal.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), \" Select a strategy and see which stocks match the criteria.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Stock Yield: \"), \"The stock yield strategy screens a stock based on its dividend yield and will only consider large-cap stocks.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), \" The screener will return stocks with a dividend yield greater than 0.052.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Stock Growth: \"), \"The stock growth strategy screens a stock based on its return on equity and its price to earnings ratio.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), \"The screener will return stocks with a return on equity greater than 0.1 and a price to earnings ratio less than the market ratio.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Stock Value: \"), \"The stock value strategy screens a stock based on its price to earnings ratio compared to the market price to earnings ratio.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), \"The screener will return stocks that have a price to earnings ratio less than the market's price to earnings ratio.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Custom: \"), \"Customise the dividend yield, price earning ratio and return on equity ratio to your liking.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), \"By entering no values, the screener will return the stocks listed in the ASX300.\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"strategy-form\",\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"mc-trade-strategy-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Strategy Goal:\"), React.createElement(Select, {\n    labelID: \"mc-trade-strategy-select-label\",\n    id: \"mc-strategy-select\",\n    value: strategy,\n    onChange: e => setStrategy(e.target.value) //set strategy \n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"yield\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Stock Yield\"), React.createElement(MenuItem, {\n    value: \"growth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Stock Growth\"), React.createElement(MenuItem, {\n    value: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Stock Value (based on P/E)\"), React.createElement(MenuItem, {\n    value: \"custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \" Custom \"))), strategy === \"custom\" && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    id: \"n-divYield\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Dividend Yield\"), React.createElement(CoolSlider, {\n    marks: marks2,\n    value: divYield,\n    onChange: handleYieldChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext,\n    min: -20,\n    max: 20,\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    id: \"n-PE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Price Earnings Ratio\"), React.createElement(CoolSlider, {\n    value: PE,\n    marks: marks2,\n    onChange: handlePEChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext,\n    min: -20,\n    max: 20,\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    id: \"n-ROE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Return on Equity\"), React.createElement(CoolSlider, {\n    value: ROE,\n    marks: marks,\n    onChange: handleROEChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext,\n    min: -50,\n    max: 50,\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Select\"))), React.createElement(Col, {\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  })), isFetching && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), !isFetching && stocks && React.createElement(ScreenerDisplay, {\n    data: stocks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })));\n}\n\nexport default StockScreener;","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/ScreenerPage/StockScreener.js"],"names":["React","useState","PropTypes","connect","axios","FormControl","Select","MenuItem","InputLabel","Button","Grid","CircularProgress","Container","Row","Col","Slider","Tooltip","ScreenerDisplay","Typography","withStyles","makeStyles","marks","value","marks2","CoolSlider","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","mark","markActive","opacity","StockScreener","strategy","setStrategy","isFetching","setIsFetching","stocks","setStocks","divYield","setYield","PE","setPE","ROE","setROE","fetchingError","setFetchingError","style","top","right","valuetext","handleSubmit","e","preventDefault","post","strat_value","div_Yield","PE_value","ROE_value","then","response","fetchSuccess","data","catch","err","console","log","handlePEChange","event","newValue","handleROEChange","handleYieldChange","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Button,\r\n    Grid,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from 'react-bootstrap';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ScreenerDisplay from './ScreenerDisplay';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './screenerStyle.css';\r\n\r\nconst marks = [\r\n  {value: 0,},{value: 10,},{value: 20,},{value: 30,},{value: 40,},\r\n  {value: -10,},{value: -20,},{value: -30,},\r\n  {value: -40,}\r\n];\r\n\r\nconst marks2 = [\r\n  {value: 0,},{value: 10,},{value: 15,},{value: 5,},{value: -5,},\r\n  {value: -10,},{value: -15,}\r\n];\r\n\r\nconst CoolSlider = withStyles({\r\n  root: {\r\n    color: '#76abe0',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 15,\r\n    width: 15,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -5,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-125% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  mark: {\r\n    backgroundColor: '#bfbfbf',\r\n    height: 8,\r\n    width: 1,\r\n    marginTop: -3,\r\n  },\r\n  markActive: {\r\n    opacity: 1,\r\n    backgroundColor: 'currentColor',\r\n  },\r\n})(Slider);\r\n\r\nfunction StockScreener() {\r\n    // Hooks for stock screener form - declare new state called strategy\r\n    const [strategy, setStrategy] = useState('yield')\r\n\r\n    // Hooks for fetching data from backend\r\n    const [isFetching, setIsFetching] = useState(null)\r\n    const [stocks, setStocks] = useState(null);\r\n\r\n    // Custom Strats\r\n    const [divYield, setYield] = useState([0,0])\r\n    const [PE, setPE] = useState([0,0])\r\n    const [ROE, setROE] = useState([0,0])\r\n\r\n    // Hooks for showing errors\r\n    const [fetchingError, setFetchingError] = useState(null);\r\n\r\n    // Style Sheet\r\n    const style = {\r\n        width:'30rem',\r\n        height:'15rem',\r\n        top:'110px',\r\n        right:'100px'\r\n    }\r\n\r\n    function valuetext(value) {\r\n      return `${value}`;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n        \r\n      setIsFetching(true);\r\n      setFetchingError(null);\r\n\r\n      // Make post request to backend to screener\r\n      axios.post('/analytics/screener', {\r\n        strat_value: strategy,\r\n        div_Yield: divYield,\r\n        PE_value: PE,\r\n        ROE_value: ROE,\r\n      })\r\n      .then((response) => {\r\n        // data stored in response\r\n        // load returned stocks into state and display into table\\\r\n        fetchSuccess(response.data);\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    };\r\n\r\n    // Do stuff after fetch is succesfful \r\n    const fetchSuccess = (data) => {\r\n      setIsFetching(false);\r\n      // get stuff ready for table\r\n      setStocks(data);\r\n    };\r\n\r\n    const handlePEChange = (event, newValue) => {\r\n      setPE(newValue);\r\n    };\r\n\r\n    const handleROEChange = (event, newValue) => {\r\n      setROE(newValue);\r\n    };\r\n\r\n    const handleYieldChange = (event, newValue) => {\r\n      setYield(newValue);\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container maxWidth=\"xl\" className=\"analysis-container\">\r\n        <Row className = \"title\">\r\n          Stock Screener\r\n          </Row>\r\n        <Row className = \"text\">\r\n          <p>\r\n          The stock screener allows you to screen through the stocks listed on the ASX300 based on your investing strategy/goal.\r\n          <br></br> Select a strategy and see which stocks match the criteria. \r\n          </p>\r\n          <br></br><br></br>          \r\n          <ul>\r\n            <li>\r\n            <strong>Stock Yield: </strong>\r\n            The stock yield strategy screens a stock based on its dividend yield and will only consider large-cap stocks.\r\n            <br></br> The screener will return stocks with a dividend yield greater than 0.052.\r\n            </li>\r\n            <li>\r\n            <strong>Stock Growth: </strong>\r\n            The stock growth strategy screens a stock based on its return on equity and its price to earnings ratio.\r\n            <br></br>The screener will return stocks with a return on equity greater than 0.1 and a price to earnings ratio less than the market ratio.\r\n            </li>\r\n            <li>\r\n            <strong>Stock Value: </strong>\r\n            The stock value strategy screens a stock based on its price to earnings ratio compared to the market price to earnings ratio.\r\n            <br></br>The screener will return stocks that have a price to earnings ratio less than the market's price to earnings ratio.\r\n            </li>\r\n            <li>\r\n            <strong>Custom: </strong>\r\n            Customise the dividend yield, price earning ratio and return on equity ratio to your liking. \r\n            <br></br>By entering no values, the screener will return the stocks listed in the ASX300. \r\n            </li>\r\n          </ul>\r\n        </Row>\r\n        <Row>\r\n          <Col xs = {1}></Col>\r\n          <Col>\r\n          <form \r\n            id = \"strategy-form\"\r\n            autoComplete = \"off\"\r\n            onSubmit = {handleSubmit}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel id = \"mc-trade-strategy-select-label\">\r\n                Strategy Goal:\r\n              </InputLabel>\r\n              <Select\r\n                labelID = \"mc-trade-strategy-select-label\"\r\n                id = \"mc-strategy-select\"\r\n                value = {strategy}\r\n                onChange = {(e) => setStrategy(e.target.value)}   //set strategy \r\n              >\r\n                <MenuItem value = \"yield\">Stock Yield</MenuItem>\r\n                <MenuItem value = \"growth\">Stock Growth</MenuItem>\r\n                <MenuItem value = \"value\">Stock Value (based on P/E)</MenuItem>\r\n                <MenuItem value = \"custom\"> Custom </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {/* Extra parameters for custom */}\r\n            {(strategy === \"custom\") && (\r\n              <React.Fragment>\r\n                <br></br><br></br>\r\n                <Grid container spacing = {3}>\r\n                  <Grid item xs = {4}> \r\n                  <FormControl fullWidth>\r\n                      <Typography id=\"n-divYield\">Dividend Yield</Typography>\r\n                      <CoolSlider\r\n                        marks = {marks2}\r\n                        value={divYield}\r\n                        onChange={handleYieldChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        getAriaValueText={valuetext}\r\n                        min = {-20}\r\n                        max = {20}\r\n                        step ={0.01}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs ={4}>\r\n                    <FormControl fullWidth>\r\n                      <Typography id=\"n-PE\">Price Earnings Ratio</Typography>\r\n                      <CoolSlider\r\n                        value={PE}\r\n                        marks = {marks2}\r\n                        onChange={handlePEChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        getAriaValueText={valuetext}\r\n                        min = {-20}\r\n                        max = {20}\r\n                        step ={0.01}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs = {4}>\r\n                    <FormControl fullWidth>\r\n                      <Typography id=\"n-ROE\">Return on Equity</Typography>\r\n                      {/* <Input\r\n                        value={ROE}\r\n                        onChange={(e) => setROE(e.target.value)}\r\n                        inputProps={{\r\n                          'aria-label': 'ROE-input',\r\n                          type: 'number', step: '0.01',\r\n                          max: 100,\r\n                          min: -100,\r\n                        }}\r\n                      /> */}\r\n                      <CoolSlider\r\n                        value={ROE}\r\n                        marks = {marks}\r\n                        onChange={handleROEChange}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        getAriaValueText={valuetext}\r\n                        min = {-50}\r\n                        max = {50}\r\n                        step ={0.01}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n            <br></br><br></br>\r\n            <Button type =\"submit\" color = \"primary\" variant = \"contained\">\r\n              Select\r\n            </Button>\r\n          </form>\r\n          </Col>\r\n          <Col xs = {1}></Col>\r\n          </Row>\r\n          {isFetching && <CircularProgress />}\r\n          <br></br><br></br>\r\n          \r\n        {/* Display results */}\r\n        {!isFetching && stocks &&(\r\n          <ScreenerDisplay data={stocks} />\r\n        )}\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default StockScreener;"]},"metadata":{},"sourceType":"module"}