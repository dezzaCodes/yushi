{"ast":null,"code":"/**\n *  set up the store of game portfolio \n */\nimport { GAME_ADD_HOLDING_LOADING, GAME_ADD_HOLDING, GAME_SELL_HOLDING_LOADING, GAME_SELL_HOLDING, GAME_RESET, GAME_PORTFOLIOS_LOADING, GAME_PORTFOLIOS_SUCCESS, GAME_PORTFOLIOS_FAILURE, LOGOUT_SUCCESS } from '../actions/types';\nconst initialState = {\n  isFetching: false,\n  gameHoldings: [],\n  error: null,\n  confirmation: null,\n  confirmationError: null\n};\nexport default function gamePortfolio(state = initialState, action) {\n  switch (action.type) {\n    case GAME_ADD_HOLDING_LOADING:\n      return Object.assign({}, state, {\n        confirmation: null,\n        confirmationError: null\n      });\n\n    case GAME_ADD_HOLDING:\n      if (action.error) {\n        return Object.assign({}, state, {\n          confirmation: null,\n          confirmationError: action.confirmationError,\n          receivedAt: Date.now()\n        });\n      } else {\n        return Object.assign({}, state, {\n          gameHoldings: [...state.gameHoldings, action.game_holding],\n          confirmation: action.confirmation,\n          confirmationError: null,\n          receivedAt: Date.now()\n        });\n      }\n\n    case GAME_SELL_HOLDING_LOADING:\n      return Object.assign({}, state, {\n        confirmation: null,\n        confirmationError: null\n      });\n\n    case GAME_RESET:\n      return Object.assign({}, state, {\n        gameHoldings: [],\n        confirmation: action.confirmation,\n        confirmationError: null,\n        receivedAt: Date.now()\n      });\n\n    case GAME_SELL_HOLDING:\n      if (action.error) {\n        return Object.assign({}, state, {\n          confirmation: null,\n          confirmationError: action.confirmationError,\n          receivedAt: Date.now()\n        });\n      } else {\n        if (action.game_holding.quantity === 0) {\n          return Object.assign({}, state, {\n            gameHoldings: state.gameHoldings.filter(h => h.id !== action.game_holding.id),\n            confirmation: action.confirmation,\n            confirmationError: null,\n            receivedAt: Date.now()\n          });\n        } else {\n          var oldHoldings = state.gameHoldings.filter(h => h.id !== action.game_holding.id);\n          var newHolding = action.game_holding;\n          var newHoldings = [...oldHoldings, newHolding];\n          return Object.assign({}, state, {\n            gameHoldings: newHoldings,\n            confirmation: action.confirmation,\n            confirmationError: null,\n            receivedAt: Date.now()\n          });\n        }\n      }\n\n    case GAME_PORTFOLIOS_LOADING:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case GAME_PORTFOLIOS_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        gameHoldings: action.payload,\n        error: null,\n        receivedAt: Date.now()\n      });\n\n    case GAME_PORTFOLIOS_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        gameHoldings: [],\n        error: action.payload,\n        receivedAt: Date.now()\n      });\n    // Clear game portfolio on logout\n\n    case LOGOUT_SUCCESS:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/reducers/gamePortfolio.js"],"names":["GAME_ADD_HOLDING_LOADING","GAME_ADD_HOLDING","GAME_SELL_HOLDING_LOADING","GAME_SELL_HOLDING","GAME_RESET","GAME_PORTFOLIOS_LOADING","GAME_PORTFOLIOS_SUCCESS","GAME_PORTFOLIOS_FAILURE","LOGOUT_SUCCESS","initialState","isFetching","gameHoldings","error","confirmation","confirmationError","gamePortfolio","state","action","type","Object","assign","receivedAt","Date","now","game_holding","quantity","filter","h","id","oldHoldings","newHolding","newHoldings","payload"],"mappings":"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","sourcesContent":["/**\n *  set up the store of game portfolio \n */\nimport {\n  GAME_ADD_HOLDING_LOADING,\n  GAME_ADD_HOLDING,\n  GAME_SELL_HOLDING_LOADING,\n  GAME_SELL_HOLDING,\n  GAME_RESET,\n  GAME_PORTFOLIOS_LOADING,\n  GAME_PORTFOLIOS_SUCCESS,\n  GAME_PORTFOLIOS_FAILURE,\n  LOGOUT_SUCCESS,\n} from '../actions/types';\n\nconst initialState = {\n  isFetching: false,\n  gameHoldings: [],\n  error: null,\n  confirmation: null,\n  confirmationError: null,\n};\n\nexport default function gamePortfolio(state = initialState, action) {\n  switch (action.type) {\n    case GAME_ADD_HOLDING_LOADING:\n      return Object.assign({}, state, {\n        confirmation: null,\n        confirmationError: null,\n      });\n    case GAME_ADD_HOLDING:\n      if (action.error) {\n        return Object.assign({}, state, {\n          confirmation: null,\n          confirmationError: action.confirmationError,\n          receivedAt: Date.now(),\n        });\n      } else {\n        return Object.assign({}, state, {\n          gameHoldings: [...state.gameHoldings, action.game_holding],\n          confirmation: action.confirmation,\n          confirmationError: null,\n          receivedAt: Date.now(),\n        });\n      }\n    case GAME_SELL_HOLDING_LOADING:\n      return Object.assign({}, state, {\n        confirmation: null,\n        confirmationError: null,\n      });\n    case GAME_RESET:\n      return Object.assign({}, state, {\n        gameHoldings: [],\n        confirmation: action.confirmation,\n        confirmationError: null,\n        receivedAt: Date.now(),\n      });\n    case GAME_SELL_HOLDING:\n      if (action.error) {\n        return Object.assign({}, state, {\n          confirmation: null,\n          confirmationError: action.confirmationError,\n          receivedAt: Date.now(),\n        });\n      } else {\n        if (action.game_holding.quantity === 0) {\n          return Object.assign({}, state, {\n            gameHoldings: state.gameHoldings.filter(\n              (h) => h.id !== action.game_holding.id\n            ),\n            confirmation: action.confirmation,\n            confirmationError: null,\n            receivedAt: Date.now(),\n          });\n        } else {\n          var oldHoldings = state.gameHoldings.filter(\n            (h) => h.id !== action.game_holding.id\n          );\n          var newHolding = action.game_holding;\n          var newHoldings = [...oldHoldings, newHolding];\n          return Object.assign({}, state, {\n            gameHoldings: newHoldings,\n            confirmation: action.confirmation,\n            confirmationError: null,\n            receivedAt: Date.now(),\n          });\n        }\n      }\n    case GAME_PORTFOLIOS_LOADING:\n      return Object.assign({}, state, {\n        isFetching: true,\n      });\n    case GAME_PORTFOLIOS_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        gameHoldings: action.payload,\n        error: null,\n        receivedAt: Date.now(),\n      });\n    case GAME_PORTFOLIOS_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        gameHoldings: [],\n        error: action.payload,\n        receivedAt: Date.now(),\n      });\n\n    // Clear game portfolio on logout\n    case LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}