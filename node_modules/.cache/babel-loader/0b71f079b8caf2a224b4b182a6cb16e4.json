{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/header.js\";\nimport React, { Fragment } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { logout } from './actions/auth';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SearchBar, SearchBarSuggestions } from './components/SearchPage/SearchBar';\nimport { useHistory } from 'react-router-dom';\nimport matchSorter from 'match-sorter';\nimport { fetchCompaniesIfNeeded } from './actions/companies';\nimport { loadUser } from './actions/auth';\n\nfunction Header(props) {\n  const history = useHistory(); //username should be passed in\n\n  const {\n    email,\n    isAuthenticated,\n    companies,\n    fetchCompaniesIfNeeded,\n    loadUser\n  } = props;\n  React.useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n  const [searchInput, setSearchInput] = React.useState('');\n  const [suggestions, setSuggestions] = React.useState([]);\n  React.useEffect(() => {\n    fetchCompaniesIfNeeded();\n  }, [fetchCompaniesIfNeeded]);\n  React.useEffect(() => {\n    setSuggestions([]);\n  }, [window.location.href]);\n\n  const handleSearchInputChange = e => {\n    // filter out suggestions\n    const query = e.target.value;\n    setSearchInput(query);\n    setSuggestions(query.length > 0 ? matchSorter(companies, query, {\n      threshold: matchSorter.rankings.CONTAINS\n    }).slice(0, 5) : []);\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    setSuggestions([]);\n\n    if (searchInput.length > 0) {\n      history.push(`/search?${searchInput}`);\n    } else {\n      history.push('/search');\n    }\n\n    setSearchInput('');\n  };\n\n  const handleSearchOnBlur = e => {\n    // if search input is out of focus, then remove suggestions list\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionOnClick = e => {\n    // if suggestion is clicked on, remove suggestions list\n    setSuggestions([]);\n  };\n\n  const guestLinks = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    as: Link,\n    style: {\n      opacity: '0.85',\n      color: 'rgb(0,0,0)',\n      margin: '10px',\n      border: '200px'\n    },\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Join\"), React.createElement(Nav.Link, {\n    as: Link,\n    style: {\n      opacity: '0.85',\n      color: 'rgb(0,0,0)',\n      margin: '10px'\n    },\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Login\"));\n  const userLinks = React.createElement(NavDropdown, {\n    title: email,\n    className: \"font-weight-bold\",\n    id: \"collasible-nav-dropdown\",\n    style: {\n      margin: '0px 0px 0px auto'\n    },\n    alignRight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(NavDropdown.Item, {\n    as: Link,\n    to: \"/passChange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Change Password\"), React.createElement(NavDropdown.Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(NavDropdown.Item, {\n    onClick: props.logout,\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Logout\"));\n  return React.createElement(Container, {\n    fluid: true,\n    className: \"navbar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    style: {\n      opacity: '1',\n      background: '#F8FAFD',\n      zIndex: '5'\n    },\n    collapseOnSelect: true,\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"/\",\n    as: Link,\n    to: \"/\",\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"YuShi\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"responsive-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"responsive-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    as: Link,\n    to: \"/stock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Markets\"), React.createElement(Nav.Link, {\n    as: Link,\n    to: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"About\"), React.createElement(NavDropdown, {\n    title: \"Analytics\",\n    id: \"collasible-nav-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(NavDropdown.Item, {\n    as: Link,\n    to: \"/analytics/MonteCarlo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Monte Carlo Simulation\"), React.createElement(NavDropdown.Item, {\n    as: Link,\n    to: \"/analytics/VAR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Value at Risk & Expected Shortfall\"), React.createElement(NavDropdown.Item, {\n    as: Link,\n    to: \"/analytics/stockScreener\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Stock Screener\"), React.createElement(NavDropdown.Item, {\n    as: Link,\n    to: \"/analytics/predict\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Stock Prediction\")), isAuthenticated && React.createElement(Nav.Link, {\n    as: Link,\n    to: \"/portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Portfolios\"), isAuthenticated && React.createElement(Nav.Link, {\n    as: Link,\n    to: \"/game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Game\"), React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px'\n    },\n    onBlur: handleSearchOnBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    query: searchInput,\n    onChange: handleSearchInputChange,\n    onSubmit: handleSearchSubmit,\n    style: {\n      width: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(SearchBarSuggestions, {\n    data: suggestions,\n    style: {\n      width: '500px'\n    },\n    onClick: handleSuggestionOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }))), React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, isAuthenticated ? userLinks : guestLinks))));\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  isAuthenticated: PropTypes.bool,\n  isLoading: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.auth.isLoading,\n  isAuthenticated: state.auth.isAuthenticated,\n  token: state.auth.token,\n  email: state.auth.email,\n  companiesFetching: state.companies.isFetching,\n  companies: state.companies.data,\n  companiesError: state.companies.error\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  fetchCompaniesIfNeeded,\n  loadUser\n})(Header);","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/header.js"],"names":["React","Fragment","Container","Nav","Navbar","NavDropdown","Link","logout","PropTypes","connect","SearchBar","SearchBarSuggestions","useHistory","matchSorter","fetchCompaniesIfNeeded","loadUser","Header","props","history","email","isAuthenticated","companies","useEffect","searchInput","setSearchInput","useState","suggestions","setSuggestions","window","location","href","handleSearchInputChange","e","query","target","value","length","threshold","rankings","CONTAINS","slice","handleSearchSubmit","preventDefault","push","handleSearchOnBlur","currentTarget","contains","relatedTarget","handleSuggestionOnClick","guestLinks","opacity","color","margin","border","userLinks","background","zIndex","marginLeft","width","propTypes","string","bool","isLoading","isRequired","func","mapStateToProps","state","auth","token","companiesFetching","isFetching","data","companiesError","error"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { logout } from './actions/auth';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  SearchBar,\n  SearchBarSuggestions,\n} from './components/SearchPage/SearchBar';\nimport { useHistory } from 'react-router-dom';\nimport matchSorter from 'match-sorter';\nimport { fetchCompaniesIfNeeded } from './actions/companies';\nimport { loadUser } from './actions/auth';\n\nfunction Header(props) {\n  const history = useHistory();\n  //username should be passed in\n\n  const {\n    email,\n    isAuthenticated,\n    companies,\n    fetchCompaniesIfNeeded,\n    loadUser,\n  } = props;\n\n  React.useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n\n  const [searchInput, setSearchInput] = React.useState('');\n  const [suggestions, setSuggestions] = React.useState([]);\n\n  React.useEffect(() => {\n    fetchCompaniesIfNeeded();\n  }, [fetchCompaniesIfNeeded]);\n\n  React.useEffect(() => {\n    setSuggestions([]);\n  }, [window.location.href]);\n\n  const handleSearchInputChange = (e) => {\n    // filter out suggestions\n    const query = e.target.value;\n    setSearchInput(query);\n    setSuggestions(\n      query.length > 0\n        ? matchSorter(companies, query, {\n            threshold: matchSorter.rankings.CONTAINS,\n          }).slice(0, 5)\n        : []\n    );\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    setSuggestions([]);\n\n    if (searchInput.length > 0) {\n      history.push(`/search?${searchInput}`);\n    } else {\n      history.push('/search');\n    }\n    setSearchInput('');\n  };\n\n  const handleSearchOnBlur = (e) => {\n    // if search input is out of focus, then remove suggestions list\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionOnClick = (e) => {\n    // if suggestion is clicked on, remove suggestions list\n    setSuggestions([]);\n  };\n\n  const guestLinks = (\n    <Fragment>\n      <Nav.Link\n        as={Link}\n        style={{\n          opacity: '0.85',\n          color: 'rgb(0,0,0)',\n          margin: '10px',\n          border: '200px',\n        }}\n        to=\"/register\"\n      >\n        Join\n      </Nav.Link>\n      <Nav.Link\n        as={Link}\n        style={{ opacity: '0.85', color: 'rgb(0,0,0)', margin: '10px' }}\n        to=\"/login\"\n      >\n        Login\n      </Nav.Link>\n    </Fragment>\n  );\n\n  const userLinks = (\n    <NavDropdown\n      title={email}\n      className=\"font-weight-bold\"\n      id=\"collasible-nav-dropdown\"\n      style={{ margin: '0px 0px 0px auto' }}\n      alignRight\n    >\n      <NavDropdown.Item as={Link} to=\"/passChange\">\n        Change Password\n      </NavDropdown.Item>\n      <NavDropdown.Divider />\n\n      <NavDropdown.Item onClick={props.logout} className=\"font-weight-bold\">\n        Logout\n      </NavDropdown.Item>\n    </NavDropdown>\n  );\n\n  return (\n    <Container fluid className=\"navbar-container\">\n      <Navbar\n        style={{\n          opacity: '1',\n          background: '#F8FAFD',\n          zIndex: '5',\n        }}\n        collapseOnSelect\n        expand=\"lg\"\n      >\n        <Navbar.Brand href=\"/\" as={Link} to=\"/\" className=\"font-weight-bold\">\n          YuShi\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto align-items-center\">\n            <Nav.Link as={Link} to=\"/stock\">\n              Markets\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/about\">\n              About\n            </Nav.Link>\n            <NavDropdown title=\"Analytics\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item as={Link} to=\"/analytics/MonteCarlo\">\n                Monte Carlo Simulation\n              </NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/analytics/VAR\">\n                Value at Risk & Expected Shortfall\n              </NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/analytics/stockScreener\">\n                Stock Screener\n              </NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/analytics/predict\">\n                Stock Prediction\n              </NavDropdown.Item>\n            </NavDropdown>\n            {isAuthenticated && (\n              <Nav.Link as={Link} to=\"/portfolio\">\n                Portfolios\n              </Nav.Link>\n            )}\n            {isAuthenticated && (\n              <Nav.Link as={Link} to=\"/game\">\n                Game\n              </Nav.Link>\n            )}\n            {/* search bar */}\n            <div style={{ marginLeft: '10px' }} onBlur={handleSearchOnBlur}>\n              <SearchBar\n                query={searchInput}\n                onChange={handleSearchInputChange}\n                onSubmit={handleSearchSubmit}\n                style={{ width: '500px' }}\n              />\n              <SearchBarSuggestions\n                data={suggestions}\n                style={{ width: '500px' }}\n                onClick={handleSuggestionOnClick}\n              />\n            </div>\n          </Nav>\n          <Nav>{isAuthenticated ? userLinks : guestLinks}</Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  );\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  isAuthenticated: PropTypes.bool,\n  isLoading: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.auth.isLoading,\n  isAuthenticated: state.auth.isAuthenticated,\n  token: state.auth.token,\n  email: state.auth.email,\n  companiesFetching: state.companies.isFetching,\n  companies: state.companies.data,\n  companiesError: state.companies.error,\n});\nexport default connect(mapStateToProps, {\n  logout,\n  fetchCompaniesIfNeeded,\n  loadUser,\n})(Header);"]},"metadata":{},"sourceType":"module"}