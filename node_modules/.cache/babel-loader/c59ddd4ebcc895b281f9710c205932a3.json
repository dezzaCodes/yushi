{"ast":null,"code":"var _jsxFileName = \"/Users/dezza/capstone-project-yushi/src/components/AnalysisPage/SimulationDisplay.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LineChart, XAxis, YAxis, Line, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nconst colours = ['#396AB1', '#DA7C30', '#3E9651', '#CC2529', '#535154', '#6B4C9A', '#922428', '#948B3D'];\n\nfunction SimulationDisplay({\n  data,\n  timeStep = 1\n}) {\n  // for displaying simulations for mc method\n  const [simulationsToShow, setSimulationsToShow] = React.useState([]);\n  const [reducedChartDisplay, setChartReducedDisplay] = React.useState(false);\n  React.useEffect(() => {\n    // determine what simulations to show if there are more than 10 (performance reasons)\n    if (!data || data.length === 0) return;\n    const nSimulations = Object.keys(data[0]).length;\n\n    if (nSimulations < 10) {\n      setChartReducedDisplay(false);\n      setSimulationsToShow(Array.from({\n        length: nSimulations\n      }, (v, k) => `simulation ${k}`));\n    } else {\n      setChartReducedDisplay(true); // show 10, 20, ... 90th percentile by sorting by ending simulated price\n\n      const endingPrices = Object.keys(data[data.length - 1]);\n      endingPrices.sort((a, b) => data[data.length - 1][a] - data[data.length - 1][b]);\n      const everyNthIndex = Math.floor(endingPrices.length / 10);\n      const filtered = endingPrices.filter((v, i) => i % everyNthIndex === 0 && i !== 0);\n      setSimulationsToShow(filtered);\n    }\n  }, [data]);\n  return React.createElement(ResponsiveContainer, {\n    width: \"90%\",\n    height: 400,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data,\n    margin: {\n      left: 5,\n      bottom: 50,\n      right: 5,\n      top: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    vertical: false,\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    label: {\n      value: 'Day',\n      position: 'insideBottom',\n      offset: -10\n    },\n    tickFormatter: v => v * timeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    label: {\n      value: 'Price ($)',\n      angle: -90,\n      position: 'insideLeft'\n    },\n    domain: ['auto', 'auto'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), simulationsToShow.map((v, i) => React.createElement(Line, {\n    dataKey: v,\n    key: i,\n    dot: false,\n    name: reducedChartDisplay ? `${(i + 1) * 10}th Percentile` : v,\n    stroke: colours[i % colours.length],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n}\n\nSimulationDisplay.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default SimulationDisplay;","map":{"version":3,"sources":["/Users/dezza/capstone-project-yushi/src/components/AnalysisPage/SimulationDisplay.js"],"names":["React","PropTypes","LineChart","XAxis","YAxis","Line","Tooltip","ResponsiveContainer","CartesianGrid","colours","SimulationDisplay","data","timeStep","simulationsToShow","setSimulationsToShow","useState","reducedChartDisplay","setChartReducedDisplay","useEffect","length","nSimulations","Object","keys","Array","from","v","k","endingPrices","sort","a","b","everyNthIndex","Math","floor","filtered","filter","i","left","bottom","right","top","value","position","offset","angle","map","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  Line,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n} from 'recharts';\n\nconst colours = [\n  '#396AB1',\n  '#DA7C30',\n  '#3E9651',\n  '#CC2529',\n  '#535154',\n  '#6B4C9A',\n  '#922428',\n  '#948B3D',\n];\n\nfunction SimulationDisplay({ data, timeStep = 1 }) {\n  // for displaying simulations for mc method\n  const [simulationsToShow, setSimulationsToShow] = React.useState([]);\n  const [reducedChartDisplay, setChartReducedDisplay] = React.useState(false);\n\n  React.useEffect(() => {\n    // determine what simulations to show if there are more than 10 (performance reasons)\n    if (!data || data.length === 0) return;\n    const nSimulations = Object.keys(data[0]).length;\n    if (nSimulations < 10) {\n      setChartReducedDisplay(false);\n      setSimulationsToShow(\n        Array.from({ length: nSimulations }, (v, k) => `simulation ${k}`)\n      );\n    } else {\n      setChartReducedDisplay(true);\n      // show 10, 20, ... 90th percentile by sorting by ending simulated price\n      const endingPrices = Object.keys(data[data.length - 1]);\n      endingPrices.sort(\n        (a, b) => data[data.length - 1][a] - data[data.length - 1][b]\n      );\n\n      const everyNthIndex = Math.floor(endingPrices.length / 10);\n      const filtered = endingPrices.filter(\n        (v, i) => i % everyNthIndex === 0 && i !== 0\n      );\n      setSimulationsToShow(filtered);\n    }\n  }, [data]);\n\n  return (\n    <ResponsiveContainer width=\"90%\" height={400}>\n      <LineChart data={data} margin={{ left: 5, bottom: 50, right: 5, top: 5 }}>\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n        <XAxis\n          label={{\n            value: 'Day',\n            position: 'insideBottom',\n            offset: -10,\n          }}\n          tickFormatter={(v) => v * timeStep}\n        />\n        <YAxis\n          label={{ value: 'Price ($)', angle: -90, position: 'insideLeft' }}\n          domain={['auto', 'auto']}\n        />\n        <Tooltip />\n        {simulationsToShow.map((v, i) => (\n          <Line\n            dataKey={v}\n            key={i}\n            dot={false}\n            name={reducedChartDisplay ? `${(i + 1) * 10}th Percentile` : v}\n            stroke={colours[i % colours.length]}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nSimulationDisplay.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default SimulationDisplay;\n"]},"metadata":{},"sourceType":"module"}